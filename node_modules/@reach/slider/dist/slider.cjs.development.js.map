{"version":3,"file":"slider.cjs.development.js","sources":["../src/index.tsx"],"sourcesContent":["/**\n * Welcome to @reach/slider!\n *\n * A UI input component where the user selects a value from within a given\n * range. A Slider has a handle that can be moved along a track to change its\n * value. When the user's mouse or focus is on the Slider's handle, the value\n * can be incremented with keyboard controls.\n *\n * Random thoughts/notes:\n *  - Currently testing this against the behavior of the native input range\n *    element to get our slider on par. We'll explore animated and multi-handle\n *    sliders next.\n *  - We may want to research some use cases for reversed sliders in RTL\n *    languages if that's a thing\n *\n * @see Docs     https://reacttraining.com/reach-ui/slider\n * @see Source   https://github.com/reach/reach-ui/tree/master/packages/slider\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#slider\n * @see          https://github.com/Stanko/aria-progress-range-slider\n * @see          http://www.oaa-accessibility.org/examplep/slider1/\n */\n\nimport React, {\n  forwardRef,\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport PropTypes from \"prop-types\";\nimport warning from \"warning\";\nimport { useId } from \"@reach/auto-id\";\nimport {\n  checkStyles,\n  createNamedContext,\n  getOwnerDocument,\n  isFunction,\n  makeId,\n  useForkedRef,\n  useIsomorphicLayoutEffect,\n  wrapEvent,\n} from \"@reach/utils\";\n\nexport type SliderAlignment = \"center\" | \"contain\";\nexport enum SliderOrientation {\n  Horizontal = \"horizontal\",\n  Vertical = \"vertical\",\n}\nexport enum SliderHandleAlignment {\n  // Handle is centered directly over the current value marker\n  Center = \"center\",\n  // Handle is contained within the bounds of the track, offset slightly from\n  // the value's center mark to accommodate\n  Contain = \"contain\",\n}\n\n// TODO: Remove in 1.0, maybe?\nexport const SLIDER_ORIENTATION_HORIZONTAL = SliderOrientation.Horizontal;\nexport const SLIDER_ORIENTATION_VERTICAL = SliderOrientation.Vertical;\nexport const SLIDER_HANDLE_ALIGN_CENTER = SliderHandleAlignment.Center;\nexport const SLIDER_HANDLE_ALIGN_CONTAIN = SliderHandleAlignment.Contain;\n\nconst SliderContext = createNamedContext<ISliderContext>(\n  \"SliderContext\",\n  {} as ISliderContext\n);\nconst useSliderContext = () => useContext(SliderContext);\n\n// These proptypes are shared between the composed SliderInput component and the\n// simplified Slider\nconst sliderPropTypes = {\n  defaultValue: PropTypes.number,\n  disabled: PropTypes.bool,\n  getValueText: PropTypes.func,\n  handleAlignment: PropTypes.oneOf([\n    SliderHandleAlignment.Center,\n    SliderHandleAlignment.Contain,\n  ]),\n  min: PropTypes.number,\n  max: PropTypes.number,\n  name: PropTypes.string,\n  orientation: PropTypes.oneOf([\n    SliderOrientation.Horizontal,\n    SliderOrientation.Vertical,\n  ]),\n  onChange: PropTypes.func,\n  step: PropTypes.number,\n  value: PropTypes.number,\n};\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Slider\n *\n * @see Docs https://reacttraining.com/reach-ui/slider#slider\n */\nexport const Slider = forwardRef<HTMLDivElement, SliderProps>(function Slider(\n  { children, ...props },\n  forwardedRef\n) {\n  return (\n    <SliderInput ref={forwardedRef} data-reach-slider=\"\" {...props}>\n      <SliderTrack>\n        <SliderTrackHighlight />\n        <SliderHandle />\n        {children}\n      </SliderTrack>\n    </SliderInput>\n  );\n});\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/slider#slider-props\n */\nexport type SliderProps = Omit<\n  React.HTMLAttributes<HTMLDivElement>,\n  \"onChange\" | \"onPointerMove\"\n> & {\n  /**\n   * `Slider` can accept `SliderMarker` children to enhance display of specific\n   * values along the track.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-children\n   */\n  children?: React.ReactNode;\n  /**\n   * The defaultValue is used to set an initial value for an uncontrolled\n   * Slider.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-defaultvalue\n   */\n  defaultValue?: number;\n  /**\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-disabled\n   */\n  disabled?: boolean;\n  /**\n   * Whether or not the slider should be disabled from user interaction.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-value\n   */\n  value?: number;\n  /**\n   * A function used to set human readable value text based on the slider's\n   * current value.\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-getvaluetext\n   */\n  getValueText?(value: number): string;\n  /**\n   * When set to `center`, the slider's handle will be positioned directly\n   * centered over the slider's curremt value on the track. This means that when\n   * the slider is at its min or max value, a visiable slider handle will extend\n   * beyond the width (or height in vertical mode) of the slider track. When set\n   * to `contain`, the slider handle will always be contained within the bounds\n   * of the track, meaning its position will be slightly offset from the actual\n   * value depending on where it sits on the track.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-handlealignment\n   */\n  handleAlignment?: \"center\" | \"contain\" | SliderAlignment;\n  /**\n   * The maximum value of the slider. Defaults to `100`.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-max\n   */\n  max?: number;\n  /**\n   * The minimum value of the slider. Defaults to `0`.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-min\n   */\n  min?: number;\n  /**\n   * If the slider is used as a form input, it should accept a `name` prop to\n   * identify its value in context of the form.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-name\n   */\n  name?: string;\n  /**\n   * Callback that fires when the slider value changes. When the `value` prop is\n   * set, the Slider state becomes controlled and `onChange` must be used to\n   * update the value in response to user interaction.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-onchange\n   */\n  onChange?(\n    newValue: number,\n    props?: {\n      min?: number;\n      max?: number;\n      handlePosition?: string;\n    }\n  ): void;\n  onPointerMove?(event: PointerEvent): void;\n  /**\n   * Sets the slider to horizontal or vertical mode.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-orientation\n   */\n  orientation?: SliderOrientation;\n  /**\n   * The step attribute is a number that specifies the granularity that the\n   * value must adhere to as it changes. Step sets minimum intervals of change,\n   * creating a \"snap\" effect when the handle is moved along the track.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-step\n   */\n  step?: number;\n};\n\nif (__DEV__) {\n  Slider.displayName = \"Slider\";\n  Slider.propTypes = {\n    ...sliderPropTypes,\n    children: PropTypes.node,\n  };\n}\n\nexport default Slider;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * SliderInput\n *\n * The parent component of the slider interface. This is a lower level component\n * if you need more control over styles or rendering the slider's inner\n * components.\n *\n * @see Docs https://reacttraining.com/reach-ui/slider#sliderinput\n */\nexport const SliderInput = forwardRef<HTMLDivElement, SliderInputProps>(\n  function SliderInput(\n    {\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-valuetext\": ariaValueText,\n      defaultValue,\n      disabled = false,\n      value: controlledValue,\n      getValueText,\n      handleAlignment = SliderHandleAlignment.Center,\n      max = 100,\n      min = 0,\n      name,\n      onChange,\n      onKeyDown,\n      onPointerDown,\n      onPointerMove,\n      onPointerUp,\n      orientation = SliderOrientation.Horizontal,\n      step: stepProp,\n      children,\n      ...rest\n    },\n    forwardedRef\n  ) {\n    // Verify that the component is either controlled or uncontrolled throughout\n    // its lifecycle\n    const { current: isControlled } = useRef(controlledValue != null);\n\n    warning(\n      !(isControlled && controlledValue == null),\n      \"Slider is changing from controlled to uncontrolled. Slider should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled Slider for the lifetime of the component. Check the `value` prop being passed in.\"\n    );\n\n    warning(\n      !(!isControlled && controlledValue != null),\n      \"Slider is changing from uncontrolled to controlled. Slider should not switch from uncontrolled to controlled (or vice versa). Decide between using a controlled or uncontrolled Slider for the lifetime of the component. Check the `value` prop being passed in.\"\n    );\n\n    const id = useId(rest.id);\n\n    const trackRef: TrackRef = useRef(null);\n    const handleRef: HandleRef = useRef(null);\n    const sliderRef: SliderRef = useRef(null);\n    const ref = useForkedRef(sliderRef, forwardedRef);\n\n    const [hasFocus, setHasFocus] = useState(false);\n    const [isPointerDown, setPointerDown] = useState(false);\n    const [internalValue, setValue] = useState(defaultValue || min);\n\n    const { ref: x, ...handleDimensions } = useDimensions(handleRef);\n\n    const _value = isControlled ? (controlledValue as number) : internalValue;\n    const value = getAllowedValue(_value, min, max);\n    const trackPercent = valueToPercent(value, min, max);\n    const isVertical = orientation === SliderOrientation.Vertical;\n    const step = stepProp || 1;\n\n    const handleSize = isVertical\n      ? handleDimensions.height\n      : handleDimensions.width;\n\n    const handlePosition = `calc(${trackPercent}% - ${\n      handleAlignment === SliderHandleAlignment.Center\n        ? `${handleSize}px / 2`\n        : `${handleSize}px * ${trackPercent * 0.01}`\n    })`;\n\n    const updateValue = useCallback(\n      function updateValue(newValue) {\n        if (!isControlled) {\n          setValue(newValue);\n        }\n        if (onChange) {\n          onChange(newValue, { min, max, handlePosition });\n        }\n      },\n      [handlePosition, isControlled, max, min, onChange]\n    );\n\n    const getNewValueFromPointer = useCallback(\n      (event: React.PointerEvent | PointerEvent) => {\n        if (trackRef.current) {\n          const {\n            left,\n            width,\n            bottom,\n            height,\n          } = trackRef.current.getBoundingClientRect();\n          const { clientX, clientY } = event;\n          let diff = isVertical ? bottom - clientY : clientX - left;\n          let percent = diff / (isVertical ? height : width);\n          let newValue = percentToValue(percent, min, max);\n\n          if (step) {\n            newValue = roundValueToStep(newValue, step);\n          }\n          newValue = getAllowedValue(newValue, min, max);\n          return newValue;\n        }\n        return null;\n      },\n      [isVertical, max, min, step]\n    );\n\n    // https://www.w3.org/TR/wai-aria-practices-1.2/#slider_kbd_interaction\n    const handleKeyDown = wrapEvent(onKeyDown, event => {\n      let flag = false;\n      let newValue;\n      const tenSteps = (max - min) / 10;\n      const keyStep = stepProp || (max - min) / 100;\n\n      switch (event.key) {\n        // Decrease the value of the slider by one step.\n        case \"ArrowLeft\":\n        case \"ArrowDown\":\n          newValue = value - keyStep;\n          flag = true;\n          break;\n        // Increase the value of the slider by one step\n        case \"ArrowRight\":\n        case \"ArrowUp\":\n          newValue = value + keyStep;\n          flag = true;\n          break;\n        // Decrement the slider by an amount larger than the step change made by\n        // `ArrowDown`.\n        case \"PageDown\":\n          newValue = value - tenSteps;\n          flag = true;\n          break;\n        // Increment the slider by an amount larger than the step change made by\n        // `ArrowUp`.\n        case \"PageUp\":\n          newValue = value + tenSteps;\n          flag = true;\n          break;\n        // Set the slider to the first allowed value in its range.\n        case \"Home\":\n          newValue = min;\n          flag = true;\n          break;\n        // Set the slider to the last allowed value in its range.\n        case \"End\":\n          newValue = max;\n          flag = true;\n          break;\n        default:\n          return;\n      }\n\n      if (flag) {\n        event.preventDefault();\n        newValue = roundValueToStep(newValue, keyStep);\n        newValue = getAllowedValue(newValue, min, max);\n        updateValue(newValue);\n      }\n    });\n\n    const handlePointerDown = wrapEvent(onPointerDown, event => {\n      event.preventDefault();\n      if (disabled) {\n        if (isPointerDown) setPointerDown(false);\n        return;\n      }\n      if (sliderRef.current && handleRef.current) {\n        setPointerDown(true);\n        const newValue = getNewValueFromPointer(event);\n        sliderRef.current.setPointerCapture &&\n          sliderRef.current.setPointerCapture(event.pointerId);\n        if (newValue != null && newValue !== value) {\n          updateValue(newValue);\n        }\n        handleRef.current.focus();\n      }\n    });\n\n    const handlePointerUp = wrapEvent(onPointerUp, function(event) {\n      if (sliderRef.current && event.pointerId) {\n        sliderRef.current.releasePointerCapture &&\n          sliderRef.current.releasePointerCapture(event.pointerId);\n      }\n      setPointerDown(false);\n    });\n\n    const valueText = getValueText ? getValueText(value) : ariaValueText;\n\n    const trackHighlightStyle = isVertical\n      ? {\n          width: `100%`,\n          height: `${trackPercent}%`,\n          bottom: 0,\n        }\n      : {\n          width: `${trackPercent}%`,\n          height: `100%`,\n          left: 0,\n        };\n\n    const ctx: ISliderContext = {\n      ariaLabel,\n      ariaLabelledBy,\n      handleDimensions,\n      handlePosition,\n      handleRef,\n      hasFocus,\n      onKeyDown,\n      onPointerDown,\n      onPointerMove,\n      onPointerUp,\n      onHandleKeyDown: handleKeyDown,\n      setHasFocus,\n      sliderId: id,\n      sliderMax: max,\n      sliderMin: min,\n      value,\n      valueText,\n      disabled: !!disabled,\n      isVertical,\n      orientation,\n      sliderStep: step,\n      trackPercent,\n      trackRef,\n      trackHighlightStyle,\n      updateValue,\n    };\n\n    useEffect(() => {\n      const ownerDocument = getOwnerDocument(sliderRef.current) || document;\n      const handlePointerMove = wrapEvent(onPointerMove, event => {\n        const newValue = getNewValueFromPointer(event);\n        if (newValue !== value) {\n          updateValue(newValue);\n        }\n      });\n\n      if (isPointerDown) {\n        ownerDocument.addEventListener(\"pointermove\", handlePointerMove);\n      }\n\n      return () => {\n        ownerDocument.removeEventListener(\"pointermove\", handlePointerMove);\n      };\n    }, [\n      getNewValueFromPointer,\n      isPointerDown,\n      onPointerMove,\n      updateValue,\n      value,\n    ]);\n\n    useEffect(() => checkStyles(\"slider\"), []);\n\n    return (\n      <SliderContext.Provider value={ctx}>\n        <div\n          {...rest}\n          ref={ref}\n          data-reach-slider-input=\"\"\n          data-disabled={disabled ? \"\" : undefined}\n          data-orientation={orientation}\n          tabIndex={-1}\n          onPointerDown={handlePointerDown}\n          onPointerUp={handlePointerUp}\n        >\n          {isFunction(children)\n            ? children({\n                hasFocus,\n                id,\n                max,\n                min,\n                value,\n                valueText,\n              })\n            : children}\n          {name && (\n            // If the slider is used in a form we'll need an input field to\n            // capture the value. We'll assume this when the component is given a\n            // form field name (A `name` prop doesn't really make sense in any\n            // other context).\n            <input\n              type=\"hidden\"\n              value={value}\n              name={name}\n              id={id && makeId(\"input\", id)}\n            />\n          )}\n        </div>\n      </SliderContext.Provider>\n    );\n  }\n);\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/slider#sliderinput-props\n */\nexport type SliderInputProps = Omit<SliderProps, \"children\"> & {\n  /**\n   * Slider expects `<SliderTrack>` as its child; The track will accept all\n   * additional slider sub-components as children. It can also accept a\n   * function/render prop as its child to expose some of its internal state\n   * variables.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#sliderinput-children\n   */\n  children: React.ReactNode | SliderChildrenRender;\n};\n\nif (__DEV__) {\n  SliderInput.displayName = \"SliderInput\";\n  SliderInput.propTypes = {\n    ...sliderPropTypes,\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * SliderTrack\n *\n * @see Docs https://reacttraining.com/reach-ui/slider#slidertrack\n */\nexport const SliderTrack = forwardRef<HTMLDivElement, SliderTrackProps>(\n  function SliderTrack({ children, style = {}, ...props }, forwardedRef) {\n    const { disabled, orientation, trackRef } = useSliderContext();\n    const ref = useForkedRef(trackRef, forwardedRef);\n\n    return (\n      <div\n        ref={ref}\n        style={{ ...style, position: \"relative\" }}\n        {...props}\n        data-reach-slider-track=\"\"\n        data-disabled={disabled ? \"\" : undefined}\n        data-orientation={orientation}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/slider#slidertrack-props\n */\nexport type SliderTrackProps = React.HTMLAttributes<HTMLDivElement> & {\n  /**\n   * `SliderTrack` expects `<SliderHandle>`, at minimum, for the Slider to\n   * function. All other Slider subcomponents should be passed as children\n   * inside the `SliderTrack`.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slidertrack-children\n   */\n  children: React.ReactNode;\n};\n\nif (__DEV__) {\n  SliderTrack.displayName = \"SliderTrack\";\n  SliderTrack.propTypes = {\n    children: PropTypes.node.isRequired,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * SliderTrackHighlight\n *\n * The (typically) highlighted portion of the track that represents the space\n * between the slider's `min` value and its current value.\n *\n * TODO: Consider renaming to `SliderTrackProgress`\n *\n * @see Docs https://reacttraining.com/reach-ui/slider#slidertrackhighlight\n */\nexport const SliderTrackHighlight = forwardRef<\n  HTMLDivElement,\n  SliderTrackHighlightProps\n>(function SliderTrackHighlight(\n  { children, style = {}, ...props },\n  forwardedRef\n) {\n  let { disabled, orientation, trackHighlightStyle } = useSliderContext();\n  return (\n    <div\n      ref={forwardedRef}\n      style={{ position: \"absolute\", ...trackHighlightStyle, ...style }}\n      {...props}\n      data-reach-slider-track-highlight=\"\"\n      data-disabled={disabled ? \"\" : undefined}\n      data-orientation={orientation}\n    />\n  );\n});\n\n/**\n * `SliderTrackHighlight` accepts any props that a HTML div component accepts.\n * `SliderTrackHighlight` will not accept or render any children.\n *\n * @see Docs https://reacttraining.com/reach-ui/slider#slidertrackhighlight-props\n */\nexport type SliderTrackHighlightProps = React.HTMLAttributes<HTMLDivElement>;\n\nif (__DEV__) {\n  SliderTrackHighlight.displayName = \"SliderTrackHighlight\";\n  SliderTrackHighlight.propTypes = {};\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * SliderHandle\n *\n * The handle that the user drags along the track to set the slider value.\n *\n * @see Docs https://reacttraining.com/reach-ui/slider#sliderhandle\n */\nexport const SliderHandle = forwardRef<HTMLDivElement, SliderHandleProps>(\n  function SliderHandle(\n    {\n      // min,\n      // max,\n      onBlur,\n      onFocus,\n      style = {},\n      onKeyDown,\n      ...props\n    },\n    forwardedRef\n  ) {\n    const {\n      ariaLabel,\n      ariaLabelledBy,\n      disabled,\n      handlePosition,\n      handleRef,\n      isVertical,\n      onHandleKeyDown,\n      orientation,\n      setHasFocus,\n      sliderMin,\n      sliderMax,\n      value,\n      valueText,\n    } = useSliderContext();\n\n    const ref = useForkedRef(handleRef, forwardedRef);\n\n    return (\n      <div\n        aria-disabled={disabled || undefined}\n        // If the slider has a visible label, it is referenced by\n        // `aria-labelledby` on the slider element. Otherwise, the slider\n        // element has a label provided by `aria-label`.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#slider_roles_states_props\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabel ? undefined : ariaLabelledBy}\n        // If the slider is vertically oriented, it has `aria-orientation` set\n        // to vertical. The default value of `aria-orientation` for a slider is\n        // horizontal.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#slider_roles_states_props\n        aria-orientation={orientation}\n        // The slider element has the `aria-valuemax` property set to a decimal\n        // value representing the maximum allowed value of the slider.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#slider_roles_states_props\n        aria-valuemax={sliderMax}\n        // The slider element has the `aria-valuemin` property set to a decimal\n        // value representing the minimum allowed value of the slider.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#slider_roles_states_props\n        aria-valuemin={sliderMin}\n        // The slider element has the `aria-valuenow` property set to a decimal\n        // value representing the current value of the slider.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#slider_roles_states_props\n        aria-valuenow={value}\n        // If the value of `aria-valuenow` is not user-friendly, e.g., the day\n        // of the week is represented by a number, the `aria-valuetext` property\n        // is set to a string that makes the slider value understandable, e.g.,\n        // \"Monday\".\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#slider_roles_states_props\n        aria-valuetext={valueText}\n        // The element serving as the focusable slider control has role\n        // `slider`.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#slider_roles_states_props\n        role=\"slider\"\n        tabIndex={disabled ? -1 : 0}\n        {...props}\n        data-reach-slider-handle=\"\"\n        ref={ref}\n        onBlur={wrapEvent(onBlur, () => {\n          setHasFocus(false);\n        })}\n        onFocus={wrapEvent(onFocus, () => {\n          setHasFocus(true);\n        })}\n        onKeyDown={wrapEvent(onKeyDown, onHandleKeyDown)}\n        style={{\n          position: \"absolute\",\n          ...(isVertical\n            ? { bottom: handlePosition }\n            : { left: handlePosition }),\n          ...style,\n        }}\n      />\n    );\n  }\n);\n\n/**\n * `SliderTrackHighlight` accepts any props that a HTML div component accepts.\n *\n * @see Docs https://reacttraining.com/reach-ui/slider#sliderhandle-props\n */\nexport type SliderHandleProps = React.HTMLAttributes<HTMLDivElement>;\n\nif (__DEV__) {\n  SliderHandle.displayName = \"SliderHandle\";\n  SliderHandle.propTypes = {};\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * SliderMarker\n *\n * A fixed value marker. These can be used to illustrate a range of steps or\n * highlight important points along the slider track.\n *\n * @see Docs https://reacttraining.com/reach-ui/slider#slidermarker\n */\nexport const SliderMarker = forwardRef<HTMLDivElement, SliderMarkerProps>(\n  function SliderMarker(\n    { children, style = {}, value, ...props },\n    forwardedRef\n  ) {\n    const {\n      disabled,\n      isVertical,\n      orientation,\n      sliderMin,\n      sliderMax,\n      value: sliderValue,\n    } = useSliderContext();\n\n    let inRange = !(value < sliderMin || value > sliderMax);\n    let absoluteStartPosition = `${valueToPercent(\n      value,\n      sliderMin,\n      sliderMax\n    )}%`;\n\n    let state =\n      value < sliderValue\n        ? \"under-value\"\n        : value === sliderValue\n        ? \"at-value\"\n        : \"over-value\";\n\n    return inRange ? (\n      <div\n        ref={forwardedRef}\n        style={{\n          position: \"absolute\",\n          ...(isVertical\n            ? { bottom: absoluteStartPosition }\n            : { left: absoluteStartPosition }),\n          ...style,\n        }}\n        {...props}\n        data-reach-slider-marker=\"\"\n        data-disabled={disabled ? \"\" : undefined}\n        data-orientation={orientation}\n        data-state={state}\n        data-value={value}\n        children={children}\n      />\n    ) : null;\n  }\n);\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/slider#slidermarker-props\n */\nexport type SliderMarkerProps = React.HTMLAttributes<HTMLDivElement> & {\n  /**\n   * The value to denote where the marker should appear along the track.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slidermarker-value\n   */\n  value: number;\n};\n\nif (__DEV__) {\n  SliderMarker.displayName = \"SliderMarker\";\n  SliderMarker.propTypes = {\n    value: PropTypes.number.isRequired,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\nfunction getAllowedValue(val: number, min: number, max: number) {\n  return val > max ? max : val < min ? min : val;\n}\n\nfunction makeValuePrecise(value: number, step: number) {\n  const stepDecimalPart = step.toString().split(\".\")[1];\n  const stepPrecision = stepDecimalPart ? stepDecimalPart.length : 0;\n  return Number(value.toFixed(stepPrecision));\n}\n\nfunction percentToValue(percent: number, min: number, max: number) {\n  return (max - min) * percent + min;\n}\n\nfunction roundValueToStep(value: number, step: number) {\n  return makeValuePrecise(Math.round(value / step) * step, step);\n}\n\nfunction useDimensions(ref: React.RefObject<HTMLElement | null>) {\n  const [{ width, height }, setDimensions] = useState({ width: 0, height: 0 });\n  // Many existing `useDimensions` type hooks will use `getBoundingClientRect`\n  // getBoundingClientRect does not work here when borders are applied.\n  // getComputedStyle is not as performant so we may want to create a utility to\n  // check for any conflicts with box sizing first and only use\n  // `getComputedStyle` if neccessary.\n  /* const { width, height } = ref.current\n    ? ref.current.getBoundingClientRect()\n    : 0; */\n\n  useIsomorphicLayoutEffect(() => {\n    if (ref.current) {\n      const { height: _newHeight, width: _newWidth } = window.getComputedStyle(\n        ref.current\n      );\n      let newHeight = parseFloat(_newHeight);\n      let newWidth = parseFloat(_newWidth);\n\n      if (newHeight !== height || newWidth !== width) {\n        setDimensions({ height: newHeight, width: newWidth });\n      }\n    }\n  }, [ref, width, height]);\n  return { ref, width, height };\n}\n\nfunction valueToPercent(value: number, min: number, max: number) {\n  return ((value - min) * 100) / (max - min);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Types\n\ntype TrackRef = React.RefObject<HTMLDivElement | null>;\ntype HandleRef = React.RefObject<HTMLDivElement | null>;\ntype SliderRef = React.RefObject<HTMLDivElement | null>;\n\ninterface ISliderContext {\n  ariaLabel: string | undefined;\n  ariaLabelledBy: string | undefined;\n  handleDimensions: {\n    width: number;\n    height: number;\n  };\n  handlePosition: string;\n  handleRef: HandleRef;\n  hasFocus: boolean;\n  onKeyDown?: (event: React.KeyboardEvent<HTMLDivElement>) => void;\n  onPointerDown?: (event: React.PointerEvent<HTMLDivElement>) => void;\n  onPointerMove?: (event: PointerEvent) => void;\n  onPointerUp?: (event: React.PointerEvent<HTMLDivElement>) => void;\n  onHandleKeyDown: (event: React.KeyboardEvent<HTMLDivElement>) => void;\n  setHasFocus: React.Dispatch<React.SetStateAction<boolean>>;\n  sliderId: string | undefined;\n  sliderMax: number;\n  sliderMin: number;\n  value: number;\n  valueText: string | undefined;\n  disabled: boolean;\n  isVertical: boolean;\n  orientation: SliderOrientation;\n  sliderStep: number;\n  trackPercent: number;\n  trackRef: TrackRef;\n  trackHighlightStyle: React.CSSProperties;\n  updateValue: (newValue: any) => void;\n}\n\ntype SliderChildrenRender = (props: {\n  hasFocus?: boolean;\n  id?: string | undefined;\n  sliderId?: string | undefined;\n  max?: number;\n  min?: number;\n  value?: number;\n  valueText?: string | undefined;\n}) => JSX.Element;\n"],"names":["SliderOrientation","SliderHandleAlignment","SLIDER_ORIENTATION_HORIZONTAL","Horizontal","SLIDER_ORIENTATION_VERTICAL","Vertical","SLIDER_HANDLE_ALIGN_CENTER","Center","SLIDER_HANDLE_ALIGN_CONTAIN","Contain","SliderContext","createNamedContext","useSliderContext","useContext","sliderPropTypes","defaultValue","PropTypes","number","disabled","bool","getValueText","func","handleAlignment","oneOf","min","max","name","string","orientation","onChange","step","value","Slider","forwardRef","forwardedRef","children","props","React","SliderInput","ref","SliderTrack","SliderTrackHighlight","SliderHandle","displayName","propTypes","node","ariaLabel","ariaLabelledBy","ariaValueText","controlledValue","onKeyDown","onPointerDown","onPointerMove","onPointerUp","stepProp","rest","useRef","isControlled","current","warning","id","useId","trackRef","handleRef","sliderRef","useForkedRef","useState","hasFocus","setHasFocus","isPointerDown","setPointerDown","internalValue","setValue","useDimensions","handleDimensions","_value","getAllowedValue","trackPercent","valueToPercent","isVertical","handleSize","height","width","handlePosition","updateValue","useCallback","newValue","getNewValueFromPointer","event","getBoundingClientRect","left","bottom","clientX","clientY","diff","percent","percentToValue","roundValueToStep","handleKeyDown","wrapEvent","flag","tenSteps","keyStep","key","preventDefault","handlePointerDown","setPointerCapture","pointerId","focus","handlePointerUp","releasePointerCapture","valueText","trackHighlightStyle","ctx","onHandleKeyDown","sliderId","sliderMax","sliderMin","sliderStep","useEffect","ownerDocument","getOwnerDocument","document","handlePointerMove","addEventListener","removeEventListener","checkStyles","Provider","undefined","tabIndex","isFunction","type","makeId","oneOfType","isRequired","style","position","onBlur","onFocus","role","SliderMarker","sliderValue","inRange","absoluteStartPosition","state","val","makeValuePrecise","stepDecimalPart","toString","split","stepPrecision","length","Number","toFixed","Math","round","setDimensions","useIsomorphicLayoutEffect","window","getComputedStyle","_newHeight","_newWidth","newHeight","parseFloat","newWidth"],"mappings":"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"}