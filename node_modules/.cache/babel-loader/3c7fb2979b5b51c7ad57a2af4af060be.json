{"ast":null,"code":"function mergesort(i, start, end) {\n  if (end - start === 1) {\n    return i;\n  }\n\n  var length_of_list = Math.floor((end - start) / 2);\n  console.log(i);\n  console.log(\"Length: \", length_of_list);\n  console.log(\"Start: \", start, \" End: \", end);\n  console.log(\" \");\n  i = mergesort(JSON.parse(JSON.stringify(i)), start, start + length_of_list);\n  i = mergesort(JSON.parse(JSON.stringify(i)), start + length_of_list, end);\n  i = merge(JSON.parse(JSON.stringify(i)), start, start + length_of_list, end);\n  return i;\n}\n\nfunction merge(main, start_i, mid_i, end_i) {\n  var left = main.slice(start_i, mid_i);\n  var right = main.slice(mid_i, end_i);\n  console.log(\"Real:\", main);\n  console.log(\"Left:\", left);\n  console.log(\"Right:\", right);\n  var len_l = left.length;\n  var len_r = right.length;\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  var result = [];\n\n  while (i < len_l & j < len_r) {\n    console.log(left[i], 'compared to', right[j]);\n\n    if (left[i] <= right[j]) {\n      result.push(left[i]);\n      console.log(result);\n      i += 1;\n    } else {\n      result.push(right[j]);\n      console.log(result);\n      j += 1;\n    }\n\n    k += 1;\n    console.log(len_l, i, len_r, j);\n  }\n\n  while (i < len_l) {\n    result.push(left[i]);\n    i += 1;\n  }\n\n  while (j < len_r) {\n    result.push(right[j]);\n    j += 1;\n  }\n\n  Array.prototype.splice.apply(main, [start_i, end_i].concat(result));\n  console.log(\"Result:\", result);\n  console.log(\"Main:\", main);\n  console.log(\" \");\n  return main;\n}\n\nexport default mergesort;\n\nfunction test() {\n  /*\n  var test1 = [];\n  var test2 = [];\n  for (var i = 0; i < 3; i++) {\n    test1 = []\n    test2 = [];\n    for (var j = 0; j < getRandomInt(1,20); j++) {\n      var num = getRandomInt(0,100)\n      test1.push(num);\n      test2.push(num);\n    }\n    test1.sort((a,b) => a-b);\n     console.log(mergesort(test2));\n    console.log(test1);\n    console.log(\"\");\n    */\n  var test1 = [21, 5, 24, 29, 44, 3, 7];\n  console.log(mergesort(test1, 0, 7)); //console.log(merge([-100,22,50,70,40,88,199,2000],0,4,8));\n}\n\ntest();\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n/*\nfunction mergesort(i) {\n\n  if (i.length < 2){\n    return i\n  }\n\n\n  var len_i = Math.floor(i.length / 2);\n\n  var left = i.slice(0,len_i);\n  var right = i.slice(len_i);\n\n\n  var left = mergesort(left);\n  var right = mergesort(right);\n\n  return merge(left, right);\n}\n\nfunction merge(left, right) {\n\n  var len_l = left.length - 1;\n  var len_r = right.length - 1;\n\n  var i = 0;\n  var j = 0;\n  var k = 0;\n\n  var result = [];\n\n  while (i <= (len_l) & j <= (len_r)){\n\n    if (left[i] <= right[j]) {\n      result.push(left[i]);\n      i += 1;\n    } else {\n      result.push(right[j]);\n      j += 1;\n    }\n    k += 1;\n  }\n\n  while (i <= len_l){\n    result.push(left[i]);\n    i += 1;\n  }\n  while (j <= len_r){\n    result.push(right[j]);\n    j += 1;\n  }\n  return result;\n}\n\n\n\nexport default mergesort;\n*/","map":{"version":3,"sources":["/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/src/components/MergeSort.js"],"names":["mergesort","i","start","end","length_of_list","Math","floor","console","log","JSON","parse","stringify","merge","main","start_i","mid_i","end_i","left","slice","right","len_l","length","len_r","j","k","result","push","Array","prototype","splice","apply","concat","test","test1","getRandomInt","min","max","random"],"mappings":"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","sourcesContent":["\n\nfunction mergesort(i, start, end) {\n\n  if (end - start === 1){\n    return i;\n  }\n\n  var length_of_list = Math.floor((end - start) / 2);\n\n  console.log(i);\n  console.log(\"Length: \",length_of_list);\n  console.log(\"Start: \",start, \" End: \", end);\n  console.log(\" \");\n\n  i = mergesort(JSON.parse(JSON.stringify(i)), start, start + length_of_list);\n  i = mergesort(JSON.parse(JSON.stringify(i)), start + length_of_list, end);\n\n  i = merge(JSON.parse(JSON.stringify(i)), start, start + length_of_list, end);\n\n\n\n  return i;\n\n\n}\n\nfunction merge(main, start_i, mid_i, end_i) {\n\n  var left = main.slice(start_i, mid_i);\n  var right = main.slice(mid_i, end_i);\n  console.log(\"Real:\",main);\n  console.log(\"Left:\",left);\n  console.log(\"Right:\",right);\n\n  var len_l = left.length;\n  var len_r = right.length;\n\n  var i = 0;\n  var j = 0;\n  var k = 0;\n\n  var result = [];\n\n  while (i < (len_l) & j < (len_r)){\n\n    console.log(left[i], 'compared to', right[j]);\n\n    if (left[i] <= right[j]) {\n      result.push(left[i]);\n\n      console.log(result);\n\n      i += 1;\n    } else {\n      result.push(right[j]);\n\n      console.log(result);\n\n      j += 1;\n    }\n    k += 1;\n\n    console.log(len_l,i,len_r,j);\n  }\n\n  while (i < len_l){\n    result.push(left[i]);\n    i += 1;\n  }\n  while (j < len_r){\n    result.push(right[j]);\n    j += 1;\n  }\n\n  Array.prototype.splice.apply(main, [start_i, end_i].concat(result));\n\n\n  console.log(\"Result:\",result);\n  console.log(\"Main:\",main);\n  console.log(\" \");\n  return main;\n}\nexport default mergesort;\n\n\nfunction test(){\n  /*\n  var test1 = [];\n  var test2 = [];\n  for (var i = 0; i < 3; i++) {\n    test1 = []\n    test2 = [];\n    for (var j = 0; j < getRandomInt(1,20); j++) {\n      var num = getRandomInt(0,100)\n      test1.push(num);\n      test2.push(num);\n    }\n    test1.sort((a,b) => a-b);\n\n    console.log(mergesort(test2));\n    console.log(test1);\n    console.log(\"\");\n    */\n   var test1 = [21,5,24,29,44,3,7];\n   console.log(mergesort(test1,0,7));\n   //console.log(merge([-100,22,50,70,40,88,199,2000],0,4,8));\n\n}\n\ntest()\n\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nfunction mergesort(i) {\n\n  if (i.length < 2){\n    return i\n  }\n\n\n  var len_i = Math.floor(i.length / 2);\n\n  var left = i.slice(0,len_i);\n  var right = i.slice(len_i);\n\n\n  var left = mergesort(left);\n  var right = mergesort(right);\n\n  return merge(left, right);\n}\n\nfunction merge(left, right) {\n\n  var len_l = left.length - 1;\n  var len_r = right.length - 1;\n\n  var i = 0;\n  var j = 0;\n  var k = 0;\n\n  var result = [];\n\n  while (i <= (len_l) & j <= (len_r)){\n\n    if (left[i] <= right[j]) {\n      result.push(left[i]);\n      i += 1;\n    } else {\n      result.push(right[j]);\n      j += 1;\n    }\n    k += 1;\n  }\n\n  while (i <= len_l){\n    result.push(left[i]);\n    i += 1;\n  }\n  while (j <= len_r){\n    result.push(right[j]);\n    j += 1;\n  }\n  return result;\n}\n\n\n\nexport default mergesort;\n*/\n"]},"metadata":{},"sourceType":"module"}