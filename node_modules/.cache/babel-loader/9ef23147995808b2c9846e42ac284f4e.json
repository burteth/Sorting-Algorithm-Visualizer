{"ast":null,"code":"function mergesort(i) {\n  if (i.length < 2) {\n    return i;\n  }\n\n  var len_i = Math.floor(i.length);\n  var left = i.slice(0, len_i);\n  var right = i.slice(len_i);\n  merge(mergesort(left), mergesort(right));\n}\n\nfunction merge(left, right) {\n  var len_l = left.length - 1;\n  var len_r = right.length - 1;\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  var result = [];\n\n  while (i <= len_l & j <= len_r) {\n    if (left[i] <= right[j]) {\n      result.push(left[i]);\n      i += 1;\n    } else {\n      result.push(right[j]);\n      j += 1;\n    }\n\n    k += 1;\n  }\n\n  while (i <= len_l) {\n    result.push(left[i]);\n    i += 1;\n  }\n\n  while (j <= len_r) {\n    result.push(right[j]);\n    j += 1;\n  }\n\n  return result;\n}\n\nexport default mergesort;","map":{"version":3,"sources":["/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/src/components/MergeSort.js"],"names":["mergesort","i","length","len_i","Math","floor","left","slice","right","merge","len_l","len_r","j","k","result","push"],"mappings":"AAEA,SAASA,SAAT,CAAmBC,CAAnB,EAAsB;AAEpB,MAAIA,CAAC,CAACC,MAAF,GAAW,CAAf,EAAiB;AACf,WAAOD,CAAP;AACD;;AAED,MAAIE,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWJ,CAAC,CAACC,MAAb,CAAZ;AAEA,MAAII,IAAI,GAAGL,CAAC,CAACM,KAAF,CAAQ,CAAR,EAAUJ,KAAV,CAAX;AACA,MAAIK,KAAK,GAAGP,CAAC,CAACM,KAAF,CAAQJ,KAAR,CAAZ;AAIAM,EAAAA,KAAK,CAACT,SAAS,CAACM,IAAD,CAAV,EAAiBN,SAAS,CAACQ,KAAD,CAA1B,CAAL;AAGD;;AAID,SAASC,KAAT,CAAeH,IAAf,EAAqBE,KAArB,EAA4B;AAE1B,MAAIE,KAAK,GAAGJ,IAAI,CAACJ,MAAL,GAAc,CAA1B;AACA,MAAIS,KAAK,GAAGH,KAAK,CAACN,MAAN,GAAe,CAA3B;AAEA,MAAID,CAAC,GAAG,CAAR;AACA,MAAIW,CAAC,GAAG,CAAR;AACA,MAAIC,CAAC,GAAG,CAAR;AAEA,MAAIC,MAAM,GAAG,EAAb;;AAEA,SAAOb,CAAC,IAAKS,KAAN,GAAeE,CAAC,IAAKD,KAA5B,EAAmC;AAEjC,QAAIL,IAAI,CAACL,CAAD,CAAJ,IAAWO,KAAK,CAACI,CAAD,CAApB,EAAyB;AACvBE,MAAAA,MAAM,CAACC,IAAP,CAAYT,IAAI,CAACL,CAAD,CAAhB;AACAA,MAAAA,CAAC,IAAI,CAAL;AACD,KAHD,MAGO;AACLa,MAAAA,MAAM,CAACC,IAAP,CAAYP,KAAK,CAACI,CAAD,CAAjB;AACAA,MAAAA,CAAC,IAAI,CAAL;AACD;;AACDC,IAAAA,CAAC,IAAI,CAAL;AACD;;AAED,SAAOZ,CAAC,IAAIS,KAAZ,EAAkB;AAChBI,IAAAA,MAAM,CAACC,IAAP,CAAYT,IAAI,CAACL,CAAD,CAAhB;AACAA,IAAAA,CAAC,IAAI,CAAL;AACD;;AACD,SAAOW,CAAC,IAAID,KAAZ,EAAkB;AAChBG,IAAAA,MAAM,CAACC,IAAP,CAAYP,KAAK,CAACI,CAAD,CAAjB;AACAA,IAAAA,CAAC,IAAI,CAAL;AACD;;AACD,SAAOE,MAAP;AACD;;AAGD,eAAed,SAAf","sourcesContent":["\n\nfunction mergesort(i) {\n\n  if (i.length < 2){\n    return i\n  }\n\n  var len_i = Math.floor(i.length);\n\n  var left = i.slice(0,len_i);\n  var right = i.slice(len_i);\n\n\n\n  merge(mergesort(left),mergesort(right));\n\n\n}\n\n\n\nfunction merge(left, right) {\n\n  var len_l = left.length - 1;\n  var len_r = right.length - 1;\n\n  var i = 0;\n  var j = 0;\n  var k = 0;\n\n  var result = [];\n\n  while (i <= (len_l) & j <= (len_r)){\n\n    if (left[i] <= right[j]) {\n      result.push(left[i]);\n      i += 1;\n    } else {\n      result.push(right[j]);\n      j += 1;\n    }\n    k += 1;\n  }\n\n  while (i <= len_l){\n    result.push(left[i]);\n    i += 1;\n  }\n  while (j <= len_r){\n    result.push(right[j]);\n    j += 1;\n  }\n  return result;\n}\n\n\nexport default mergesort;\n"]},"metadata":{},"sourceType":"module"}