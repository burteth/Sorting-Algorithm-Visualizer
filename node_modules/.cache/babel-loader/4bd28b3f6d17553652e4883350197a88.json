{"ast":null,"code":"function bubblesort(bar_list) {\n  //animation list: nested arrays contain the two items being compared and\n  // a third item that if it exists is another array of two items that must\n  //be interchanged\n  var animations = [];\n  var going_to = bar_list.length - 1;\n\n  while (going_to > 1) {\n    for (var i = 0; i < going_to; i++) {\n      if (bar_list[i]['len'] >= bar_list[i + 1]['len']) {\n        animations.push([i, i + 1, 1]);\n        swap(bar_list, i, i + 1);\n      } else {\n        animations.push([i, i + 1, 0]);\n      }\n    }\n\n    going_to--;\n  }\n\n  animations[animations.length - 1][2] = 2;\n  return [bar_list, animations];\n}\n\nexport default bubblesort;\n\nfunction swap(bar_list, index1, index2) {\n  var temp = bar_list[index1];\n  bar_list[index1] = bar_list[index2];\n  bar_list[index2] = temp;\n  bar_list[index1]['id'] = index1;\n  bar_list[index2]['id'] = index2;\n}\n\nfunction printbar(bar_list) {\n  for (var i = 0; i < bar_list.length; i++) {\n    console.log(bar_list[i]);\n  }\n}","map":{"version":3,"sources":["/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/src/components/BubbleSort.js"],"names":["bubblesort","bar_list","animations","going_to","length","i","push","swap","index1","index2","temp","printbar","console","log"],"mappings":"AAGA,SAASA,UAAT,CAAoBC,QAApB,EAA8B;AAC5B;AACA;AACA;AAEA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,QAAQ,GAAGF,QAAQ,CAACG,MAAT,GAAgB,CAA/B;;AAEA,SAAOD,QAAQ,GAAG,CAAlB,EAAqB;AAEnB,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAApB,EAA8BE,CAAC,EAA/B,EAAmC;AACjC,UAAGJ,QAAQ,CAACI,CAAD,CAAR,CAAY,KAAZ,KAAsBJ,QAAQ,CAACI,CAAC,GAAC,CAAH,CAAR,CAAc,KAAd,CAAzB,EAA8C;AAE5CH,QAAAA,UAAU,CAACI,IAAX,CAAgB,CAACD,CAAD,EAAGA,CAAC,GAAC,CAAL,EAAO,CAAP,CAAhB;AACAE,QAAAA,IAAI,CAACN,QAAD,EAAUI,CAAV,EAAYA,CAAC,GAAC,CAAd,CAAJ;AACD,OAJD,MAIK;AACHH,QAAAA,UAAU,CAACI,IAAX,CAAgB,CAACD,CAAD,EAAGA,CAAC,GAAC,CAAL,EAAO,CAAP,CAAhB;AACD;AACF;;AACDF,IAAAA,QAAQ;AACT;;AACDD,EAAAA,UAAU,CAACA,UAAU,CAACE,MAAX,GAAkB,CAAnB,CAAV,CAAgC,CAAhC,IAAqC,CAArC;AAEA,SAAO,CAACH,QAAD,EAAUC,UAAV,CAAP;AAGC;;AACH,eAAeF,UAAf;;AAMA,SAASO,IAAT,CAAcN,QAAd,EAAuBO,MAAvB,EAA8BC,MAA9B,EAAqC;AAEnC,MAAIC,IAAI,GAAGT,QAAQ,CAACO,MAAD,CAAnB;AACAP,EAAAA,QAAQ,CAACO,MAAD,CAAR,GAAmBP,QAAQ,CAACQ,MAAD,CAA3B;AACAR,EAAAA,QAAQ,CAACQ,MAAD,CAAR,GAAmBC,IAAnB;AACAT,EAAAA,QAAQ,CAACO,MAAD,CAAR,CAAiB,IAAjB,IAAyBA,MAAzB;AACAP,EAAAA,QAAQ,CAACQ,MAAD,CAAR,CAAiB,IAAjB,IAAyBA,MAAzB;AAED;;AAID,SAASE,QAAT,CAAkBV,QAAlB,EAA2B;AACzB,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAAQ,CAACG,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;AACtCO,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAQ,CAACI,CAAD,CAApB;AACH;AACF","sourcesContent":["\n\n\nfunction bubblesort(bar_list) {\n  //animation list: nested arrays contain the two items being compared and\n  // a third item that if it exists is another array of two items that must\n  //be interchanged\n\n  var animations = [];\n  var going_to = bar_list.length-1;\n\n  while (going_to > 1) {\n\n    for (var i = 0; i < going_to; i++) {\n      if(bar_list[i]['len'] >= bar_list[i+1]['len']){\n\n        animations.push([i,i+1,1]);\n        swap(bar_list,i,i+1);\n      }else{\n        animations.push([i,i+1,0]);\n      }\n    }\n    going_to--;\n  }\n  animations[animations.length-1][2] = 2;\n\n  return [bar_list,animations];\n\n\n  }\nexport default bubblesort;\n\n\n\n\n\nfunction swap(bar_list,index1,index2){\n\n  var temp = bar_list[index1];\n  bar_list[index1] = bar_list[index2];\n  bar_list[index2] = temp;\n  bar_list[index1]['id'] = index1;\n  bar_list[index2]['id'] = index2;\n\n}\n\n\n\nfunction printbar(bar_list){\n  for (var i = 0; i < bar_list.length; i++) {\n      console.log(bar_list[i]);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}