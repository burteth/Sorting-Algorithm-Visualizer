{"ast":null,"code":"//import React from 'react';\nfunction selectionsort(bar_list) {\n  //animation list: nested arrays contain the two items being compared and\n  // a third item that if it exists is another array of two items that must\n  //be interchanged\n  var animations = [];\n  var current_index = 0;\n  var n = bar_list.length; //var temp;\n  //loop through every item in array\n\n  while (current_index < n - 1) {\n    var lowest_index = current_index;\n\n    for (var i = current_index + 1; i < n; i++) {\n      animations.push([current_index, i, 0]);\n\n      if (bar_list[i]['len'] <= bar_list[lowest_index]['len']) {\n        lowest_index = i;\n      }\n    }\n\n    animations.push([current_index, lowest_index, 1]);\n    update_bar_list(bar_list, current_index, lowest_index);\n    current_index++;\n  }\n  /*\n  for (i = 0; i < animations.length; i++) {\n    console.log(animations[i]);\n  }\n  */\n\n\n  return [bar_list, animations];\n}\n\nexport default selectionsort;\n\nfunction update_bar_list(bar_list, index1, index2) {\n  var temporary = bar_list[index1];\n  bar_list[index1] = bar_list[index2];\n  bar_list[index2] = temporary;\n  bar_list[index1]['id'] = index1;\n  bar_list[index2]['id'] = index2;\n}","map":{"version":3,"sources":["/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/src/components/SelectionSort.js"],"names":["selectionsort","bar_list","animations","current_index","n","length","lowest_index","i","push","update_bar_list","index1","index2","temporary"],"mappings":"AAAA;AAEA,SAASA,aAAT,CAAuBC,QAAvB,EAAiC;AAC/B;AACA;AACA;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,aAAa,GAAG,CAApB;AACA,MAAIC,CAAC,GAAGH,QAAQ,CAACI,MAAjB,CAN+B,CAO/B;AAEF;;AACE,SAAOF,aAAa,GAAGC,CAAC,GAAC,CAAzB,EAA4B;AAC1B,QAAIE,YAAY,GAAGH,aAAnB;;AAEE,SAAK,IAAII,CAAC,GAAGJ,aAAa,GAAC,CAA3B,EAA8BI,CAAC,GAAGH,CAAlC,EAAqCG,CAAC,EAAtC,EAA0C;AACxCL,MAAAA,UAAU,CAACM,IAAX,CAAgB,CAACL,aAAD,EAAeI,CAAf,EAAiB,CAAjB,CAAhB;;AAEA,UAAIN,QAAQ,CAACM,CAAD,CAAR,CAAY,KAAZ,KAAsBN,QAAQ,CAACK,YAAD,CAAR,CAAuB,KAAvB,CAA1B,EAAwD;AACtDA,QAAAA,YAAY,GAAGC,CAAf;AAED;AACF;;AACDL,IAAAA,UAAU,CAACM,IAAX,CAAgB,CAACL,aAAD,EAAeG,YAAf,EAA4B,CAA5B,CAAhB;AACAG,IAAAA,eAAe,CAACR,QAAD,EAAUE,aAAV,EAAwBG,YAAxB,CAAf;AACAH,IAAAA,aAAa;AAGhB;AACD;;;;;;;AAKA,SAAO,CAACF,QAAD,EAAUC,UAAV,CAAP;AAED;;AACD,eAAeF,aAAf;;AAEA,SAASS,eAAT,CAAyBR,QAAzB,EAAkCS,MAAlC,EAAyCC,MAAzC,EAAgD;AAC9C,MAAIC,SAAS,GAAGX,QAAQ,CAACS,MAAD,CAAxB;AACAT,EAAAA,QAAQ,CAACS,MAAD,CAAR,GAAmBT,QAAQ,CAACU,MAAD,CAA3B;AACAV,EAAAA,QAAQ,CAACU,MAAD,CAAR,GAAmBC,SAAnB;AAEAX,EAAAA,QAAQ,CAACS,MAAD,CAAR,CAAiB,IAAjB,IAAyBA,MAAzB;AACAT,EAAAA,QAAQ,CAACU,MAAD,CAAR,CAAiB,IAAjB,IAAyBA,MAAzB;AACD","sourcesContent":["//import React from 'react';\n\nfunction selectionsort(bar_list) {\n  //animation list: nested arrays contain the two items being compared and\n  // a third item that if it exists is another array of two items that must\n  //be interchanged\n  var animations = [];\n  var current_index = 0;\n  var n = bar_list.length;\n  //var temp;\n\n//loop through every item in array\n  while (current_index < n-1) {\n    var lowest_index = current_index;\n\n      for (var i = current_index+1; i < n; i++) {\n        animations.push([current_index,i,0])\n\n        if (bar_list[i]['len'] <= bar_list[lowest_index]['len']){\n          lowest_index = i;\n\n        }\n      }\n      animations.push([current_index,lowest_index,1])\n      update_bar_list(bar_list,current_index,lowest_index)\n      current_index++;\n\n\n  }\n  /*\n  for (i = 0; i < animations.length; i++) {\n    console.log(animations[i]);\n  }\n  */\n  return [bar_list,animations];\n\n}\nexport default selectionsort;\n\nfunction update_bar_list(bar_list,index1,index2){\n  var temporary = bar_list[index1]\n  bar_list[index1] = bar_list[index2]\n  bar_list[index2] = temporary\n\n  bar_list[index1]['id'] = index1\n  bar_list[index2]['id'] = index2\n}\n"]},"metadata":{},"sourceType":"module"}