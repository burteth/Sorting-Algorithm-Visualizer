{"ast":null,"code":"//import React from 'react';\nfunction selectionsort(bar_list) {\n  //animation list: nested arrays contain the two items being compared and\n  // a third item that if it exists is another array of two items that must\n  //be interchanged\n  var animations = [];\n  var current_index = 0;\n  var n = bar_list.length; //var temp;\n  //loop through every item in array\n\n  while (current_index < n - 1) {\n    var lowest_index = current_index;\n\n    for (var i = current_index + 1; i < n; i++) {\n      animations.push([current_index, i, \"compare\"]);\n\n      if (bar_list[i]['len'] <= bar_list[lowest_index]['len']) {\n        lowest_index = i;\n      }\n    }\n\n    animations.push([current_index, lowest_index, \"swap\"]); //Swap out data from current index and lowest index\n\n    var temporary = bar_list[current_index];\n    bar_list[current_index] = bar_list[lowest_index];\n    bar_list[lowest_index] = temporary;\n    bar_list[current_index]['id'] = current_index;\n    bar_list[lowest_index]['id'] = lowest_index;\n    current_index++;\n  }\n\n  return [bar_list, animations];\n}\n\nexport default selectionsort;","map":{"version":3,"sources":["/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/src/components/SelectionSort.js"],"names":["selectionsort","bar_list","animations","current_index","n","length","lowest_index","i","push","temporary"],"mappings":"AAAA;AAEA,SAASA,aAAT,CAAuBC,QAAvB,EAAiC;AAC/B;AACA;AACA;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,aAAa,GAAG,CAApB;AACA,MAAIC,CAAC,GAAGH,QAAQ,CAACI,MAAjB,CAN+B,CAO/B;AAEF;;AACE,SAAOF,aAAa,GAAGC,CAAC,GAAC,CAAzB,EAA4B;AAC1B,QAAIE,YAAY,GAAGH,aAAnB;;AAEE,SAAK,IAAII,CAAC,GAAGJ,aAAa,GAAC,CAA3B,EAA8BI,CAAC,GAAGH,CAAlC,EAAqCG,CAAC,EAAtC,EAA0C;AACxCL,MAAAA,UAAU,CAACM,IAAX,CAAgB,CAACL,aAAD,EAAeI,CAAf,EAAiB,SAAjB,CAAhB;;AAEA,UAAIN,QAAQ,CAACM,CAAD,CAAR,CAAY,KAAZ,KAAsBN,QAAQ,CAACK,YAAD,CAAR,CAAuB,KAAvB,CAA1B,EAAwD;AACtDA,QAAAA,YAAY,GAAGC,CAAf;AAED;AACF;;AACDL,IAAAA,UAAU,CAACM,IAAX,CAAgB,CAACL,aAAD,EAAeG,YAAf,EAA4B,MAA5B,CAAhB,EAXwB,CAaxB;;AACA,QAAIG,SAAS,GAAGR,QAAQ,CAACE,aAAD,CAAxB;AACAF,IAAAA,QAAQ,CAACE,aAAD,CAAR,GAA0BF,QAAQ,CAACK,YAAD,CAAlC;AACAL,IAAAA,QAAQ,CAACK,YAAD,CAAR,GAAyBG,SAAzB;AAEAR,IAAAA,QAAQ,CAACE,aAAD,CAAR,CAAwB,IAAxB,IAAgCA,aAAhC;AACAF,IAAAA,QAAQ,CAACK,YAAD,CAAR,CAAuB,IAAvB,IAA+BA,YAA/B;AACAH,IAAAA,aAAa;AAGhB;;AACD,SAAO,CAACF,QAAD,EAAUC,UAAV,CAAP;AAGD;;AACD,eAAeF,aAAf","sourcesContent":["//import React from 'react';\n\nfunction selectionsort(bar_list) {\n  //animation list: nested arrays contain the two items being compared and\n  // a third item that if it exists is another array of two items that must\n  //be interchanged\n  var animations = [];\n  var current_index = 0;\n  var n = bar_list.length;\n  //var temp;\n\n//loop through every item in array\n  while (current_index < n-1) {\n    var lowest_index = current_index;\n\n      for (var i = current_index+1; i < n; i++) {\n        animations.push([current_index,i,\"compare\"])\n\n        if (bar_list[i]['len'] <= bar_list[lowest_index]['len']){\n          lowest_index = i;\n\n        }\n      }\n      animations.push([current_index,lowest_index,\"swap\"])\n\n      //Swap out data from current index and lowest index\n      var temporary = bar_list[current_index];\n      bar_list[current_index] = bar_list[lowest_index];\n      bar_list[lowest_index] = temporary;\n\n      bar_list[current_index]['id'] = current_index;\n      bar_list[lowest_index]['id'] = lowest_index;\n      current_index++;\n\n\n  }\n  return [bar_list,animations];\n\n\n}\nexport default selectionsort;\n"]},"metadata":{},"sourceType":"module"}