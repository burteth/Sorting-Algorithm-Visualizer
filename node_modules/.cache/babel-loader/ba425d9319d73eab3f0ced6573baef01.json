{"ast":null,"code":"//import React from 'react';\nfunction selectionsort(bar_list) {\n  //animation list: nested arrays contain the two items being compared and\n  // a third item that if it exists is another array of two items that must\n  //be interchanged\n  var animations = [];\n  var current_index = 0;\n  var n = bar_list.length; //var temp;\n  //loop through every item in array\n\n  while (current_index < n - 1) {\n    var lowest_index = current_index;\n\n    for (var i = current_index + 1; i < n; i++) {\n      animations.push([current_index, i, 0]);\n\n      if (bar_list[i]['len'] <= bar_list[lowest_index]['len']) {\n        lowest_index = i;\n      }\n    }\n\n    animations.push([current_index, lowest_index, 1]); //Swap out data from current index and lowest index\n\n    var temporary = bar_list[current_index];\n    bar_list[current_index] = bar_list[lowest_index];\n    bar_list[lowest_index] = temporary;\n    bar_list[current_index]['id'] = current_index;\n    bar_list[lowest_index]['id'] = lowest_index;\n    current_index++;\n  } //last item in animation, its third item is 2\n\n\n  animations[animations.length - 1][2] = 2; //return [bar_list,animations];\n\n  var updated_bars = [bar_list, animations];\n  var bar_docs = document.getElementsByClassName(\"bar\");\n  var counter = 0;\n  var k = 0;\n  var animations = updated_bars[1];\n  var first;\n  var second;\n  var started = false;\n  var temp;\n  var temporary_color = [0, 0];\n\n  while (counter < animations.length) {\n    setTimeout(() => {\n      if (started) {\n        bar_docs[animations[k - 1][0]].style.backgroundColor = temporary_color[0];\n        bar_docs[animations[k - 1][1]].style.backgroundColor = temporary_color[1];\n      } else {\n        started = true;\n      }\n\n      if (animations[k][2] === 0) {\n        temporary_color[0] = bar_docs[animations[k][0]].style.backgroundColor;\n        temporary_color[1] = bar_docs[animations[k][1]].style.backgroundColor;\n        bar_docs[animations[k][0]].style.backgroundColor = 'red';\n        bar_docs[animations[k][1]].style.backgroundColor = 'red';\n      } else if (animations[k][2] === 1) {\n        temp = bar_docs[animations[k][0]].style.height;\n        bar_docs[animations[k][0]].style.height = bar_docs[animations[k][1]].style.height;\n        bar_docs[animations[k][1]].style.height = temp;\n        temporary_color[0] = bar_docs[animations[k][1]].style.backgroundColor;\n        temporary_color[1] = bar_docs[animations[k][0]].style.backgroundColor;\n        bar_docs[animations[k][0]].style.backgroundColor = 'red';\n        bar_docs[animations[k][1]].style.backgroundColor = 'red';\n      } else {\n        temp = bar_docs[animations[k][0]].style.height;\n        bar_docs[animations[k][0]].style.height = bar_docs[animations[k][1]].style.height;\n        bar_docs[animations[k][1]].style.height = temp;\n        this.setState({\n          bar_list: updated_bars[0]\n        });\n      }\n\n      k++;\n    }, counter * 2);\n    counter++;\n  }\n\n  ;\n}\n\nexport default selectionsort;","map":{"version":3,"sources":["/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/src/components/SelectionSort.js"],"names":["selectionsort","bar_list","animations","current_index","n","length","lowest_index","i","push","temporary","updated_bars","bar_docs","document","getElementsByClassName","counter","k","first","second","started","temp","temporary_color","setTimeout","style","backgroundColor","height","setState"],"mappings":"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","sourcesContent":["//import React from 'react';\n\nfunction selectionsort(bar_list) {\n  //animation list: nested arrays contain the two items being compared and\n  // a third item that if it exists is another array of two items that must\n  //be interchanged\n  var animations = [];\n  var current_index = 0;\n  var n = bar_list.length;\n  //var temp;\n\n//loop through every item in array\n  while (current_index < n-1) {\n    var lowest_index = current_index;\n\n      for (var i = current_index+1; i < n; i++) {\n        animations.push([current_index,i,0])\n\n        if (bar_list[i]['len'] <= bar_list[lowest_index]['len']){\n          lowest_index = i;\n\n        }\n      }\n      animations.push([current_index,lowest_index,1])\n\n      //Swap out data from current index and lowest index\n      var temporary = bar_list[current_index];\n      bar_list[current_index] = bar_list[lowest_index];\n      bar_list[lowest_index] = temporary;\n\n      bar_list[current_index]['id'] = current_index;\n      bar_list[lowest_index]['id'] = lowest_index;\n      current_index++;\n\n\n  }\n  //last item in animation, its third item is 2\n  animations[animations.length-1][2] = 2;\n  //return [bar_list,animations];\n\n  var updated_bars = [bar_list,animations];\n\n    var bar_docs = document.getElementsByClassName(\"bar\");\n    var counter = 0;\n    var k = 0;\n    var animations = updated_bars[1]\n\n    var first;\n    var second;\n\n    var started = false;\n\n    var temp;\n    var temporary_color = [0,0]\n    while(counter < animations.length){\n\n      setTimeout(() => {\n        if (started){\n          bar_docs[animations[k-1][0]].style.backgroundColor = temporary_color[0];\n          bar_docs[animations[k-1][1]].style.backgroundColor = temporary_color[1];\n        }else{\n          started = true;\n        }\n\n        if (animations[k][2] === 0){\n          temporary_color[0] = bar_docs[animations[k][0]].style.backgroundColor;\n          temporary_color[1] = bar_docs[animations[k][1]].style.backgroundColor;\n          bar_docs[animations[k][0]].style.backgroundColor = 'red';\n          bar_docs[animations[k][1]].style.backgroundColor = 'red';\n        }else if (animations[k][2] === 1){\n\n          temp = bar_docs[animations[k][0]].style.height;\n          bar_docs[animations[k][0]].style.height = bar_docs[animations[k][1]].style.height;\n          bar_docs[animations[k][1]].style.height = temp;\n          temporary_color[0] = bar_docs[animations[k][1]].style.backgroundColor;\n          temporary_color[1] = bar_docs[animations[k][0]].style.backgroundColor;\n          bar_docs[animations[k][0]].style.backgroundColor = 'red';\n          bar_docs[animations[k][1]].style.backgroundColor = 'red';\n\n        }else{\n\n          temp = bar_docs[animations[k][0]].style.height;\n          bar_docs[animations[k][0]].style.height = bar_docs[animations[k][1]].style.height;\n          bar_docs[animations[k][1]].style.height = temp;\n          this.setState({bar_list:updated_bars[0]});\n        }\n\n        k++;\n\n\n      },counter*2);\n      counter++;\n    };\n\n\n\n\n\n\n}\nexport default selectionsort;\n"]},"metadata":{},"sourceType":"module"}