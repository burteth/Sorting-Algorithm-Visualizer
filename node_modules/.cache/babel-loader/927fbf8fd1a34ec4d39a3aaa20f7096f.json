{"ast":null,"code":"function mergesort(i, start, end) {\n  if (end - start === 1) {\n    return i;\n  }\n\n  var length_of_list = Math.floor((end - start) / 2);\n  /*\n  console.log(i);\n  console.log(\"Length: \",length_of_list);\n  console.log(\"Start: \",start, \" End: \", end);\n  console.log(\"Sliced:\", i.slice(start,end));\n  console.log(\" \");\n  */\n\n  i = mergesort(JSON.parse(JSON.stringify(i)), start, start + length_of_list);\n  i = mergesort(JSON.parse(JSON.stringify(i)), start + length_of_list, end);\n  i = merge(JSON.parse(JSON.stringify(i)), start, start + length_of_list, end);\n  return i;\n}\n\nfunction merge(main, start_i, mid_i, end_i) {\n  var left = main.slice(start_i, mid_i);\n  var right = main.slice(mid_i, end_i);\n  /*\n  console.log(\"Real:\",main);\n  console.log(\"Left:\",left);\n  console.log(\"Right:\",right);\n  */\n\n  var len_l = left.length;\n  var len_r = right.length;\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  var result = [];\n\n  while (i < len_l & j < len_r) {\n    //console.log(left[i], 'compared to', right[j]);\n    if (left[i] <= right[j]) {\n      result.push(left[i]);\n      i += 1;\n    } else {\n      result.push(right[j]);\n      j += 1;\n    }\n\n    k += 1; //console.log(len_l,i,len_r,j);\n  }\n\n  while (i < len_l) {\n    result.push(left[i]);\n    i += 1;\n  }\n\n  while (j < len_r) {\n    result.push(right[j]);\n    j += 1;\n  } //console.log(\"Main Before:\",main);\n\n\n  Array.prototype.splice.apply(main, [start_i, result.length].concat(result));\n  /*\n  console.log(\"Result:\",result);\n  console.log(\"Main:\",main);\n  console.log(\" \");\n  */\n\n  return main;\n}\n\nexport default mergesort;\n\nfunction test() {\n  var test1 = [];\n  var test2 = [];\n\n  for (var i = 0; i < 200; i++) {\n    test1 = [];\n    test2 = [];\n\n    for (var j = 0; j < getRandomInt(1, 200); j++) {\n      var num = getRandomInt(0, 100);\n      test1.push(num);\n      test2.push(num);\n    } //test1.sort((a,b) => a-b);\n    //console.log(JSON.stringify(test1)==JSON.stringify(test2));\n    //console.log(\"MergeSorted:\",mergesort(test2,0,test2.length));\n\n\n    console.log(JSON.stringify(mergesort(test2, 0, test2.length)) == JSON.stringify(test1.sort((a, b) => a - b))); //var test1 = [21,5,24,29,44,3,7];\n    //console.log(mergesort(test1,0,7));\n    //console.log(merge([-100,22,50,70,40,88,199,2000],0,4,8));\n  }\n}\n\ntest();\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n/*\nfunction mergesort(i) {\n\n  if (i.length < 2){\n    return i\n  }\n\n\n  var len_i = Math.floor(i.length / 2);\n\n  var left = i.slice(0,len_i);\n  var right = i.slice(len_i);\n\n\n  var left = mergesort(left);\n  var right = mergesort(right);\n\n  return merge(left, right);\n}\n\nfunction merge(left, right) {\n\n  var len_l = left.length - 1;\n  var len_r = right.length - 1;\n\n  var i = 0;\n  var j = 0;\n  var k = 0;\n\n  var result = [];\n\n  while (i <= (len_l) & j <= (len_r)){\n\n    if (left[i] <= right[j]) {\n      result.push(left[i]);\n      i += 1;\n    } else {\n      result.push(right[j]);\n      j += 1;\n    }\n    k += 1;\n  }\n\n  while (i <= len_l){\n    result.push(left[i]);\n    i += 1;\n  }\n  while (j <= len_r){\n    result.push(right[j]);\n    j += 1;\n  }\n  return result;\n}\n\n\n\nexport default mergesort;\n*/","map":{"version":3,"sources":["/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/src/components/MergeSort.js"],"names":["mergesort","i","start","end","length_of_list","Math","floor","JSON","parse","stringify","merge","main","start_i","mid_i","end_i","left","slice","right","len_l","length","len_r","j","k","result","push","Array","prototype","splice","apply","concat","test","test1","test2","getRandomInt","num","console","log","sort","a","b","min","max","random"],"mappings":"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","sourcesContent":["\n\nfunction mergesort(i, start, end) {\n\n  if (end - start === 1){\n    return i;\n  }\n\n  var length_of_list = Math.floor((end - start) / 2);\n\n\n  /*\n  console.log(i);\n  console.log(\"Length: \",length_of_list);\n  console.log(\"Start: \",start, \" End: \", end);\n  console.log(\"Sliced:\", i.slice(start,end));\n  console.log(\" \");\n*/\n\n  i = mergesort(JSON.parse(JSON.stringify(i)), start, start + length_of_list);\n  i = mergesort(JSON.parse(JSON.stringify(i)), start + length_of_list, end);\n\n  i = merge(JSON.parse(JSON.stringify(i)), start, start + length_of_list, end);\n\n\n\n  return i;\n\n\n}\n\nfunction merge(main, start_i, mid_i, end_i) {\n\n  var left = main.slice(start_i, mid_i);\n  var right = main.slice(mid_i, end_i);\n\n  /*\n  console.log(\"Real:\",main);\n  console.log(\"Left:\",left);\n  console.log(\"Right:\",right);\n  */\n\n  var len_l = left.length;\n  var len_r = right.length;\n\n  var i = 0;\n  var j = 0;\n  var k = 0;\n\n  var result = [];\n\n  while (i < (len_l) & j < (len_r)){\n\n    //console.log(left[i], 'compared to', right[j]);\n\n    if (left[i] <= right[j]) {\n      result.push(left[i]);\n      i += 1;\n    } else {\n      result.push(right[j]);\n      j += 1;\n    }\n    k += 1;\n\n    //console.log(len_l,i,len_r,j);\n  }\n\n  while (i < len_l){\n    result.push(left[i]);\n    i += 1;\n  }\n  while (j < len_r){\n    result.push(right[j]);\n    j += 1;\n  }\n\n  //console.log(\"Main Before:\",main);\n  Array.prototype.splice.apply(main, [start_i, result.length].concat(result));\n\n  /*\n  console.log(\"Result:\",result);\n  console.log(\"Main:\",main);\n  console.log(\" \");\n  */\n  return main;\n}\nexport default mergesort;\n\n\nfunction test(){\n  var test1 = [];\n  var test2 = [];\n  for (var i = 0; i < 200; i++) {\n    test1 = []\n    test2 = [];\n    for (var j = 0; j < getRandomInt(1,200); j++) {\n      var num = getRandomInt(0,100)\n      test1.push(num);\n      test2.push(num);\n    }\n    //test1.sort((a,b) => a-b);\n\n    //console.log(JSON.stringify(test1)==JSON.stringify(test2));\n    //console.log(\"MergeSorted:\",mergesort(test2,0,test2.length));\n    console.log(JSON.stringify(mergesort(test2,0,test2.length))==JSON.stringify(test1.sort((a,b) => a-b)));\n   //var test1 = [21,5,24,29,44,3,7];\n   //console.log(mergesort(test1,0,7));\n   //console.log(merge([-100,22,50,70,40,88,199,2000],0,4,8));\n }\n\n}\n\ntest()\n\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nfunction mergesort(i) {\n\n  if (i.length < 2){\n    return i\n  }\n\n\n  var len_i = Math.floor(i.length / 2);\n\n  var left = i.slice(0,len_i);\n  var right = i.slice(len_i);\n\n\n  var left = mergesort(left);\n  var right = mergesort(right);\n\n  return merge(left, right);\n}\n\nfunction merge(left, right) {\n\n  var len_l = left.length - 1;\n  var len_r = right.length - 1;\n\n  var i = 0;\n  var j = 0;\n  var k = 0;\n\n  var result = [];\n\n  while (i <= (len_l) & j <= (len_r)){\n\n    if (left[i] <= right[j]) {\n      result.push(left[i]);\n      i += 1;\n    } else {\n      result.push(right[j]);\n      j += 1;\n    }\n    k += 1;\n  }\n\n  while (i <= len_l){\n    result.push(left[i]);\n    i += 1;\n  }\n  while (j <= len_r){\n    result.push(right[j]);\n    j += 1;\n  }\n  return result;\n}\n\n\n\nexport default mergesort;\n*/\n"]},"metadata":{},"sourceType":"module"}