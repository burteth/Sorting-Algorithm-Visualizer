{"ast":null,"code":"var _jsxFileName = \"/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/src/components/App.js\";\nimport React from \"react\"; //import uuid from \"uuid\";\n\nimport Bars from \"./Bars\";\nimport selectionsort from \"./SelectionSort\";\nconst num_bars = 100;\nconst min_bar = 10;\nconst max_bar = 700; //const color1 = '#007bff';\n\nconst speed_max = 100;\nconst highlight_color = \"red\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.randomizebars = () => {\n      this.setState({\n        bar_list: GenerateBars(num_bars, min_bar, max_bar)\n      });\n    };\n\n    this.stopCurrentSort = () => {\n      //Clear all timeouts\n      for (var i = 0; i < this.timeouts.length; i++) {\n        clearTimeout(this.timeouts[i]);\n      } //Remove the bars that are currently red\n\n\n      var bar_docs = document.getElementsByClassName(\"bar\");\n\n      for (var i = 0; i < bar_docs.length; i++) {\n        if (bar_docs[i].style.backgroundColor === highlight_color) {\n          bar_docs[i].style.backgroundColor = colorpernum(min_bar, max_bar, parseInt(bar_docs[i].style.height));\n        }\n      } //Update the current state\n\n\n      var current_bars = [];\n\n      for (var j = 0; j < bar_docs.length; j++) {\n        current_bars.push({\n          color: bar_docs[j].style.backgroundColor,\n          id: j,\n          len: parseInt(bar_docs[j].style.height)\n        });\n      }\n\n      this.setState({\n        bar_list: current_bars\n      });\n    };\n\n    this.updatebars = updated_bars => {\n      this.timeouts = [];\n      var bar_docs = document.getElementsByClassName(\"bar\");\n      var counter = 0;\n      var k = 0;\n      var animations = updated_bars[1];\n      var started = false;\n      var temp;\n      var temporary_color = [0, 0];\n      var num_compairsons = 0;\n      var num_swaps = 0; //linear\n\n      var speed = Math.abs(-1 * document.getElementById(\"speedrange\").value * speed_max / 100.0 + speed_max);\n\n      while (counter < animations.length) {\n        this.timeouts.push(setTimeout(() => {\n          if (started) {\n            bar_docs[animations[k - 1][0]].style.backgroundColor = temporary_color[0];\n            bar_docs[animations[k - 1][1]].style.backgroundColor = temporary_color[1];\n          } else {\n            started = true;\n          }\n\n          if (animations[k][2] === 0) {\n            temporary_color[0] = bar_docs[animations[k][0]].style.backgroundColor;\n            temporary_color[1] = bar_docs[animations[k][1]].style.backgroundColor;\n            bar_docs[animations[k][0]].style.backgroundColor = highlight_color;\n            bar_docs[animations[k][1]].style.backgroundColor = highlight_color;\n            num_compairsons += 1;\n            document.getElementById('compairsons').innerText = num_compairsons;\n          } else if (animations[k][2] === 1) {\n            temp = bar_docs[animations[k][0]].style.height;\n            bar_docs[animations[k][0]].style.height = bar_docs[animations[k][1]].style.height;\n            bar_docs[animations[k][1]].style.height = temp;\n            temporary_color[0] = bar_docs[animations[k][1]].style.backgroundColor;\n            temporary_color[1] = bar_docs[animations[k][0]].style.backgroundColor;\n            bar_docs[animations[k][0]].style.backgroundColor = highlight_color;\n            bar_docs[animations[k][1]].style.backgroundColor = highlight_color;\n            num_swaps += 1;\n            document.getElementById('swaps').innerText = num_swaps;\n          } else {\n            temp = bar_docs[animations[k][0]].style.height;\n            bar_docs[animations[k][0]].style.height = bar_docs[animations[k][1]].style.height;\n            bar_docs[animations[k][1]].style.height = temp;\n            this.setState({\n              bar_list: updated_bars[0]\n            });\n          }\n\n          document.getElementById('total_ops').innerText = num_swaps + num_compairsons;\n          k++;\n        }, counter * speed));\n        counter++;\n      }\n\n      ;\n    };\n\n    this.state = {\n      bar_list: []\n    };\n  }\n\n  componentDidMount() {\n    this.randomizebars();\n    this.stopCurrentSort = this.stopCurrentSort.bind(this);\n    this.updatebars = this.updatebars.bind(this);\n    this.timeouts = [];\n  }\n\n  render() {\n    const {\n      bar_list\n    } = this.state;\n    return React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, React.createElement(\"div\", {\n      id: \"UI_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, React.createElement(\"div\", {\n      id: \"button_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.randomizebars(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \"Randomize\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.updatebars(selectionsort(JSON.parse(JSON.stringify(this.state.bar_list)))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Selection Sort\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Merge Sort\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Quick Sort\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Heap Sort\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"Bubble Sort\")), React.createElement(\"div\", {\n      className: \"bars_and_data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, React.createElement(\"div\", {\n      className: \"data_viz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, React.createElement(\"div\", {\n      className: \"data_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, \"Number of compairsons:\", React.createElement(\"div\", {\n      id: \"compairsons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"0\"))), React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, React.createElement(\"div\", {\n      className: \"data_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, \"Number of swaps:\", React.createElement(\"div\", {\n      id: \"swaps\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"0\"))), React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, React.createElement(\"div\", {\n      className: \"data_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, \"Total Number of operations:\", React.createElement(\"div\", {\n      id: \"total_ops\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"0\"))), React.createElement(\"label\", {\n      htmlFor: \"numberange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"Number of Bars\"), React.createElement(\"input\", {\n      type: \"range\",\n      className: \"custom-range\",\n      id: \"numberange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), React.createElement(\"label\", {\n      htmlFor: \"speedrange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"Sorting Speed\"), React.createElement(\"input\", {\n      type: \"range\",\n      className: \"custom-range\",\n      id: \"speedrange\",\n      defaultValue: \"99\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.stopCurrentSort(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Stop\")), React.createElement(Bars, {\n      bar_list: bar_list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n} //Helper Functions\n\nfunction GenerateBars(len, min, max) {\n  var lst = [];\n\n  for (var i = 0; i < len; i++) {\n    var random = getRandomInt(min, max);\n    lst.push({\n      id: i,\n      len: random,\n      color: colorpernum(min, max, random)\n    });\n    colorpernum(min, max, random);\n  }\n\n  return lst;\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction colorpernum(min, max, number) {\n  var place = Math.floor(255 * (number - min) / (max - min));\n  var color = \"rgb(\" + 0 + \",\" + Math.floor(place * 123 / 255) + \",\" + place + \")\";\n  return color;\n}\n/*\nfunction sleep(milliseconds) {\n  const date = Date.now();\n  let currentDate = null;\n  do {\n    currentDate = Date.now();\n  } while (currentDate - date < milliseconds);\n}\n*/","map":{"version":3,"sources":["/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/src/components/App.js"],"names":["React","Bars","selectionsort","num_bars","min_bar","max_bar","speed_max","highlight_color","App","Component","constructor","props","randomizebars","setState","bar_list","GenerateBars","stopCurrentSort","i","timeouts","length","clearTimeout","bar_docs","document","getElementsByClassName","style","backgroundColor","colorpernum","parseInt","height","current_bars","j","push","color","id","len","updatebars","updated_bars","counter","k","animations","started","temp","temporary_color","num_compairsons","num_swaps","speed","Math","abs","getElementById","value","setTimeout","innerText","state","componentDidMount","bind","render","JSON","parse","stringify","min","max","lst","random","getRandomInt","floor","number","place"],"mappings":"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","sourcesContent":["import React from \"react\";\n//import uuid from \"uuid\";\nimport Bars from \"./Bars\";\n\nimport selectionsort from \"./SelectionSort\"\n\nconst num_bars = 100;\nconst min_bar = 10;\nconst max_bar = 700;\n//const color1 = '#007bff';\nconst speed_max = 100;\nconst highlight_color = \"red\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      bar_list: []\n    };\n\n  }\n\n  componentDidMount() {\n    this.randomizebars();\n    this.stopCurrentSort = this.stopCurrentSort.bind(this)\n    this.updatebars = this.updatebars.bind(this)\n    this.timeouts = [];\n  }\n\n  randomizebars = () => {\n    this.setState({\n      bar_list: GenerateBars(num_bars, min_bar, max_bar)\n    });\n  }\n  stopCurrentSort = () => {\n    //Clear all timeouts\n    for (var i=0; i< this.timeouts.length; i++) {\n      clearTimeout(this.timeouts[i]);\n    }\n\n  //Remove the bars that are currently red\n  var bar_docs = document.getElementsByClassName(\"bar\");\n  for (var i = 0; i < bar_docs.length; i++) {\n    if (bar_docs[i].style.backgroundColor === highlight_color){\n      bar_docs[i].style.backgroundColor = colorpernum(min_bar,max_bar,parseInt(bar_docs[i].style.height));\n    }\n  }\n\n\n  //Update the current state\n  var current_bars = []\n  for (var j = 0; j < bar_docs.length; j++) {\n    current_bars.push({color:bar_docs[j].style.backgroundColor,id:j,len: parseInt(bar_docs[j].style.height)})\n  }\n  this.setState({bar_list:current_bars});\n  }\n\n  render() {\n    const {bar_list} = this.state;\n\n    return (<div>\n      <div id=\"UI_container\">\n        <div id=\"button_container\">\n          <button className=\"btn btn-primary\" onClick={() => this.randomizebars()}>Randomize</button>\n          <button className=\"btn btn-primary\" onClick={() => this.updatebars(selectionsort(JSON.parse(JSON.stringify(this.state.bar_list))))}>Selection Sort</button>\n          <button className=\"btn btn-primary\">Merge Sort</button>\n          <button className=\"btn btn-primary\">Quick Sort</button>\n          <button className=\"btn btn-primary\">Heap Sort</button>\n          <button className=\"btn btn-primary\">Bubble Sort</button>\n        </div>\n        <div className=\"bars_and_data\">\n          <div className=\"data_viz\">\n            <div>\n              <div className=\"data_header\">Number of compairsons:\n                <div id=\"compairsons\">0</div>\n              </div>\n            </div>\n            <div>\n              <div className=\"data_header\">Number of swaps:\n                <div id=\"swaps\">0</div>\n              </div>\n            </div>\n            <div>\n              <div className=\"data_header\">Total Number of operations:\n                <div id=\"total_ops\">0</div>\n              </div>\n            </div>\n            <label htmlFor=\"numberange\">Number of Bars</label>\n            <input type=\"range\" className=\"custom-range\" id=\"numberange\"></input>\n\n            <label htmlFor=\"speedrange\">Sorting Speed</label>\n            <input type=\"range\" className=\"custom-range\" id=\"speedrange\" defaultValue='99'></input>\n          <button className=\"btn btn-primary\" onClick={() => this.stopCurrentSort()}>Stop</button>\n          </div>\n          <Bars bar_list={bar_list}/>\n        </div>\n      </div>\n    </div>);\n  }\n  updatebars = (updated_bars) => {\n    this.timeouts = [];\n\n    var bar_docs = document.getElementsByClassName(\"bar\");\n    var counter = 0;\n    var k = 0;\n    var animations = updated_bars[1]\n\n    var started = false;\n\n    var temp;\n    var temporary_color = [0, 0]\n\n    var num_compairsons = 0;\n    var num_swaps = 0;\n\n    //linear\n    var speed = Math.abs((((-1*(document.getElementById(\"speedrange\").value))*speed_max/100.0) + speed_max));\n    while (counter < animations.length) {\n\n      this.timeouts.push(setTimeout(() => {\n        if (started) {\n          bar_docs[animations[k - 1][0]].style.backgroundColor = temporary_color[0];\n          bar_docs[animations[k - 1][1]].style.backgroundColor = temporary_color[1];\n        } else {\n          started = true;\n        }\n\n        if (animations[k][2] === 0) {\n\n          temporary_color[0] = bar_docs[animations[k][0]].style.backgroundColor;\n          temporary_color[1] = bar_docs[animations[k][1]].style.backgroundColor;\n          bar_docs[animations[k][0]].style.backgroundColor = highlight_color;\n          bar_docs[animations[k][1]].style.backgroundColor = highlight_color;\n\n          num_compairsons += 1;\n          document.getElementById('compairsons').innerText = num_compairsons;\n\n        } else if (animations[k][2] === 1) {\n\n          temp = bar_docs[animations[k][0]].style.height;\n          bar_docs[animations[k][0]].style.height = bar_docs[animations[k][1]].style.height;\n          bar_docs[animations[k][1]].style.height = temp;\n          temporary_color[0] = bar_docs[animations[k][1]].style.backgroundColor;\n          temporary_color[1] = bar_docs[animations[k][0]].style.backgroundColor;\n          bar_docs[animations[k][0]].style.backgroundColor = highlight_color;\n          bar_docs[animations[k][1]].style.backgroundColor = highlight_color;\n\n          num_swaps += 1;\n          document.getElementById('swaps').innerText = num_swaps;\n\n        } else {\n\n          temp = bar_docs[animations[k][0]].style.height;\n          bar_docs[animations[k][0]].style.height = bar_docs[animations[k][1]].style.height;\n          bar_docs[animations[k][1]].style.height = temp;\n          this.setState({bar_list: updated_bars[0]});\n        }\n\n        document.getElementById('total_ops').innerText = num_swaps + num_compairsons;\n\n        k++;\n\n      }, counter * speed));\n      counter++;\n    };\n\n  }\n}\n\n//Helper Functions\n\nfunction GenerateBars(len, min, max) {\n  var lst = [];\n  for (var i = 0; i < len; i++) {\n    var random = getRandomInt(min, max);\n    lst.push({\n      id: i,\n      len: random,\n      color: colorpernum(min, max, random)\n    });\n    colorpernum(min, max, random);\n  }\n\n  return lst;\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction colorpernum(min, max, number) {\n  var place = Math.floor(255 * (number - min) / (max - min));\n  var color = \"rgb(\" + 0 + \",\" + Math.floor(place * 123 / 255) + \",\" + place + \")\";\n  return color;\n}\n\n/*\nfunction sleep(milliseconds) {\n  const date = Date.now();\n  let currentDate = null;\n  do {\n    currentDate = Date.now();\n  } while (currentDate - date < milliseconds);\n}\n*/\n"]},"metadata":{},"sourceType":"module"}