{"ast":null,"code":"var _jsxFileName = \"/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/src/components/App.js\";\nimport React from \"react\"; //import uuid from \"uuid\";\n\nimport Bars from \"./Bars\";\nimport selectionsort from \"./SelectionSort\";\nimport * as helper from \"./HelperFunctions\"; //import SortButton from \"./SortButton\"\n\nconst num_bars = 100;\nconst min_bar = 20;\nconst max_bar = 500;\nconst color1 = '#007bff';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.randomizebars = () => {\n      this.setState({\n        bar_list: helper.GenerateBars(num_bars, min_bar, max_bar)\n      });\n    };\n\n    this.updatebars = updated_bars => {\n      var bar_docs = document.getElementsByClassName(\"bar\");\n      var counter = 0;\n      var k = 0;\n      var animations = updated_bars[1];\n      var first;\n      var second;\n      var started = false;\n      var temp;\n      var temporary_color = [0, 0];\n\n      while (counter < animations.length) {\n        setTimeout(() => {\n          if (started) {\n            bar_docs[animations[k - 1][0]].style.backgroundColor = temporary_color[0];\n            bar_docs[animations[k - 1][1]].style.backgroundColor = temporary_color[1];\n          } else {\n            started = true;\n          }\n\n          if (animations[k][2] === 0) {\n            temporary_color[0] = bar_docs[animations[k][0]].style.backgroundColor;\n            temporary_color[1] = bar_docs[animations[k][1]].style.backgroundColor;\n            bar_docs[animations[k][0]].style.backgroundColor = 'red';\n            bar_docs[animations[k][1]].style.backgroundColor = 'red';\n          } else if (animations[k][2] === 1) {\n            temp = bar_docs[animations[k][0]].style.height;\n            bar_docs[animations[k][0]].style.height = bar_docs[animations[k][1]].style.height;\n            bar_docs[animations[k][1]].style.height = temp;\n            temporary_color[0] = bar_docs[animations[k][1]].style.backgroundColor;\n            temporary_color[1] = bar_docs[animations[k][0]].style.backgroundColor;\n            bar_docs[animations[k][0]].style.backgroundColor = 'red';\n            bar_docs[animations[k][1]].style.backgroundColor = 'red';\n          } else {\n            temp = bar_docs[animations[k][0]].style.height;\n            bar_docs[animations[k][0]].style.height = bar_docs[animations[k][1]].style.height;\n            bar_docs[animations[k][1]].style.height = temp;\n            this.setState({\n              bar_list: updated_bars[0]\n            });\n          }\n\n          k++;\n        }, counter * 2);\n        counter++;\n      }\n\n      ;\n    };\n\n    this.state = {\n      bar_list: []\n    };\n  }\n\n  componentDidMount() {\n    this.randomizebars();\n  }\n\n  render() {\n    const {\n      bar_list\n    } = this.state;\n    return React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, React.createElement(\"div\", {\n      id: \"UI_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, React.createElement(\"div\", {\n      id: \"button_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.randomizebars(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"Randomize\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.updatebars(selectionsort(JSON.parse(JSON.stringify(this.state.bar_list)))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"Selection Sort\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"Merge Sort\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"Quick Sort\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \"Heap Sort\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"Bubble Sort\")), React.createElement(Bars, {\n      bar_list: bar_list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/src/components/App.js"],"names":["React","Bars","selectionsort","helper","num_bars","min_bar","max_bar","color1","App","Component","constructor","props","randomizebars","setState","bar_list","GenerateBars","updatebars","updated_bars","bar_docs","document","getElementsByClassName","counter","k","animations","first","second","started","temp","temporary_color","length","setTimeout","style","backgroundColor","height","state","componentDidMount","render","JSON","parse","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,KAAKC,MAAZ,MAAwB,mBAAxB,C,CACA;;AAGA,MAAMC,QAAQ,GAAG,GAAjB;AACA,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAMC,OAAO,GAAG,GAAhB;AACA,MAAMC,MAAM,GAAG,SAAf;AAEA,eAAe,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,aAZmB,GAYH,MAAM;AACpB,WAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAEX,MAAM,CAACY,YAAP,CAAoBX,QAApB,EAA6BC,OAA7B,EAAqCC,OAArC;AAAX,OAAd;AACD,KAdkB;;AAAA,SAgBnBU,UAhBmB,GAgBLC,YAAD,IAAkB;AAE7B,UAAIC,QAAQ,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,KAAhC,CAAf;AACA,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,CAAC,GAAG,CAAR;AACA,UAAIC,UAAU,GAAGN,YAAY,CAAC,CAAD,CAA7B;AAEA,UAAIO,KAAJ;AACA,UAAIC,MAAJ;AAEA,UAAIC,OAAO,GAAG,KAAd;AAEA,UAAIC,IAAJ;AACA,UAAIC,eAAe,GAAG,CAAC,CAAD,EAAG,CAAH,CAAtB;;AACA,aAAMP,OAAO,GAAGE,UAAU,CAACM,MAA3B,EAAkC;AAEhCC,QAAAA,UAAU,CAAC,MAAM;AACf,cAAIJ,OAAJ,EAAY;AACVR,YAAAA,QAAQ,CAACK,UAAU,CAACD,CAAC,GAAC,CAAH,CAAV,CAAgB,CAAhB,CAAD,CAAR,CAA6BS,KAA7B,CAAmCC,eAAnC,GAAqDJ,eAAe,CAAC,CAAD,CAApE;AACAV,YAAAA,QAAQ,CAACK,UAAU,CAACD,CAAC,GAAC,CAAH,CAAV,CAAgB,CAAhB,CAAD,CAAR,CAA6BS,KAA7B,CAAmCC,eAAnC,GAAqDJ,eAAe,CAAC,CAAD,CAApE;AACD,WAHD,MAGK;AACHF,YAAAA,OAAO,GAAG,IAAV;AACD;;AAED,cAAIH,UAAU,CAACD,CAAD,CAAV,CAAc,CAAd,MAAqB,CAAzB,EAA2B;AACzBM,YAAAA,eAAe,CAAC,CAAD,CAAf,GAAqBV,QAAQ,CAACK,UAAU,CAACD,CAAD,CAAV,CAAc,CAAd,CAAD,CAAR,CAA2BS,KAA3B,CAAiCC,eAAtD;AACAJ,YAAAA,eAAe,CAAC,CAAD,CAAf,GAAqBV,QAAQ,CAACK,UAAU,CAACD,CAAD,CAAV,CAAc,CAAd,CAAD,CAAR,CAA2BS,KAA3B,CAAiCC,eAAtD;AACAd,YAAAA,QAAQ,CAACK,UAAU,CAACD,CAAD,CAAV,CAAc,CAAd,CAAD,CAAR,CAA2BS,KAA3B,CAAiCC,eAAjC,GAAmD,KAAnD;AACAd,YAAAA,QAAQ,CAACK,UAAU,CAACD,CAAD,CAAV,CAAc,CAAd,CAAD,CAAR,CAA2BS,KAA3B,CAAiCC,eAAjC,GAAmD,KAAnD;AACD,WALD,MAKM,IAAIT,UAAU,CAACD,CAAD,CAAV,CAAc,CAAd,MAAqB,CAAzB,EAA2B;AAE/BK,YAAAA,IAAI,GAAGT,QAAQ,CAACK,UAAU,CAACD,CAAD,CAAV,CAAc,CAAd,CAAD,CAAR,CAA2BS,KAA3B,CAAiCE,MAAxC;AACAf,YAAAA,QAAQ,CAACK,UAAU,CAACD,CAAD,CAAV,CAAc,CAAd,CAAD,CAAR,CAA2BS,KAA3B,CAAiCE,MAAjC,GAA0Cf,QAAQ,CAACK,UAAU,CAACD,CAAD,CAAV,CAAc,CAAd,CAAD,CAAR,CAA2BS,KAA3B,CAAiCE,MAA3E;AACAf,YAAAA,QAAQ,CAACK,UAAU,CAACD,CAAD,CAAV,CAAc,CAAd,CAAD,CAAR,CAA2BS,KAA3B,CAAiCE,MAAjC,GAA0CN,IAA1C;AACAC,YAAAA,eAAe,CAAC,CAAD,CAAf,GAAqBV,QAAQ,CAACK,UAAU,CAACD,CAAD,CAAV,CAAc,CAAd,CAAD,CAAR,CAA2BS,KAA3B,CAAiCC,eAAtD;AACAJ,YAAAA,eAAe,CAAC,CAAD,CAAf,GAAqBV,QAAQ,CAACK,UAAU,CAACD,CAAD,CAAV,CAAc,CAAd,CAAD,CAAR,CAA2BS,KAA3B,CAAiCC,eAAtD;AACAd,YAAAA,QAAQ,CAACK,UAAU,CAACD,CAAD,CAAV,CAAc,CAAd,CAAD,CAAR,CAA2BS,KAA3B,CAAiCC,eAAjC,GAAmD,KAAnD;AACAd,YAAAA,QAAQ,CAACK,UAAU,CAACD,CAAD,CAAV,CAAc,CAAd,CAAD,CAAR,CAA2BS,KAA3B,CAAiCC,eAAjC,GAAmD,KAAnD;AAED,WAVK,MAUD;AAEHL,YAAAA,IAAI,GAAGT,QAAQ,CAACK,UAAU,CAACD,CAAD,CAAV,CAAc,CAAd,CAAD,CAAR,CAA2BS,KAA3B,CAAiCE,MAAxC;AACAf,YAAAA,QAAQ,CAACK,UAAU,CAACD,CAAD,CAAV,CAAc,CAAd,CAAD,CAAR,CAA2BS,KAA3B,CAAiCE,MAAjC,GAA0Cf,QAAQ,CAACK,UAAU,CAACD,CAAD,CAAV,CAAc,CAAd,CAAD,CAAR,CAA2BS,KAA3B,CAAiCE,MAA3E;AACAf,YAAAA,QAAQ,CAACK,UAAU,CAACD,CAAD,CAAV,CAAc,CAAd,CAAD,CAAR,CAA2BS,KAA3B,CAAiCE,MAAjC,GAA0CN,IAA1C;AACA,iBAAKd,QAAL,CAAc;AAACC,cAAAA,QAAQ,EAACG,YAAY,CAAC,CAAD;AAAtB,aAAd;AACD;;AAEDK,UAAAA,CAAC;AAGF,SAlCS,EAkCRD,OAAO,GAAC,CAlCA,CAAV;AAmCAA,QAAAA,OAAO;AACR;;AAAA;AAKF,KAzEkB;;AAGjB,SAAKa,KAAL,GAAa;AACXpB,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGH;;AAEDqB,EAAAA,iBAAiB,GAAG;AAClB,SAAKvB,aAAL;AACD;;AAiECwB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEtB,MAAAA;AAAF,QAAe,KAAKoB,KAA1B;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAM,KAAKtB,aAAL,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAM,KAAKI,UAAL,CAAgBd,aAAa,CAACmC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAKL,KAAL,CAAWpB,QAA1B,CAAX,CAAD,CAA7B,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,EAME;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,CADF,EASI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAEA,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADF,CADF;AAeD;;AA9F8C","sourcesContent":["import React from \"react\";\n//import uuid from \"uuid\";\nimport Bars from \"./Bars\";\n\nimport selectionsort from \"./SelectionSort\"\nimport * as helper from \"./HelperFunctions\"\n//import SortButton from \"./SortButton\"\n\n\nconst num_bars = 100;\nconst min_bar = 20;\nconst max_bar = 500;\nconst color1 = '#007bff';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      bar_list: []\n    };\n}\n\ncomponentDidMount() {\n  this.randomizebars();\n}\n\n  randomizebars = () => {\n    this.setState({bar_list: helper.GenerateBars(num_bars,min_bar,max_bar)});\n  }\n\n  updatebars = (updated_bars) => {\n\n    var bar_docs = document.getElementsByClassName(\"bar\");\n    var counter = 0;\n    var k = 0;\n    var animations = updated_bars[1]\n\n    var first;\n    var second;\n\n    var started = false;\n\n    var temp;\n    var temporary_color = [0,0]\n    while(counter < animations.length){\n\n      setTimeout(() => {\n        if (started){\n          bar_docs[animations[k-1][0]].style.backgroundColor = temporary_color[0];\n          bar_docs[animations[k-1][1]].style.backgroundColor = temporary_color[1];\n        }else{\n          started = true;\n        }\n\n        if (animations[k][2] === 0){\n          temporary_color[0] = bar_docs[animations[k][0]].style.backgroundColor;\n          temporary_color[1] = bar_docs[animations[k][1]].style.backgroundColor;\n          bar_docs[animations[k][0]].style.backgroundColor = 'red';\n          bar_docs[animations[k][1]].style.backgroundColor = 'red';\n        }else if (animations[k][2] === 1){\n\n          temp = bar_docs[animations[k][0]].style.height;\n          bar_docs[animations[k][0]].style.height = bar_docs[animations[k][1]].style.height;\n          bar_docs[animations[k][1]].style.height = temp;\n          temporary_color[0] = bar_docs[animations[k][1]].style.backgroundColor;\n          temporary_color[1] = bar_docs[animations[k][0]].style.backgroundColor;\n          bar_docs[animations[k][0]].style.backgroundColor = 'red';\n          bar_docs[animations[k][1]].style.backgroundColor = 'red';\n\n        }else{\n\n          temp = bar_docs[animations[k][0]].style.height;\n          bar_docs[animations[k][0]].style.height = bar_docs[animations[k][1]].style.height;\n          bar_docs[animations[k][1]].style.height = temp;\n          this.setState({bar_list:updated_bars[0]});\n        }\n\n        k++;\n\n\n      },counter*2);\n      counter++;\n    };\n\n\n\n\n  }\n\n  render() {\n    const { bar_list } = this.state;\n\n    return (\n      <div>\n        <div id=\"UI_container\">\n          <div id=\"button_container\">\n            <button className=\"btn btn-primary\" onClick={() => this.randomizebars()}>Randomize</button>\n            <button className=\"btn btn-primary\" onClick={() => this.updatebars(selectionsort(JSON.parse(JSON.stringify(this.state.bar_list))))}>Selection Sort</button>\n            <button className=\"btn btn-primary\">Merge Sort</button>\n            <button className=\"btn btn-primary\">Quick Sort</button>\n            <button className=\"btn btn-primary\">Heap Sort</button>\n            <button className=\"btn btn-primary\">Bubble Sort</button>\n          </div>\n            <Bars bar_list={bar_list} />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}