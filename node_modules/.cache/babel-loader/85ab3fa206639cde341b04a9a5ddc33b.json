{"ast":null,"code":"//import React from 'react';\nfunction selectionsort(bar_list) {\n  //animation list: nested arrays contain the two items being compared and\n  // a third item that if it exists is another array of two items that must\n  //be interchanged\n  var animations = [];\n  var current_index = 0;\n  var n = bar_list.length;\n  var temp; //loop through every item in array\n\n  while (current_index < n - 1) {\n    var lowest_index = 0;\n\n    for (var i = current_index; i < n; i++) {\n      if (bar_list[i]['len'] <= bar_list[lowest_index]['len']) {\n        lowest_index = bar_list[i]['id'];\n      }\n    }\n\n    temp = bar_list[current_index];\n    bar_list[current_index]['len'] = bar_list[lowest_index]['len'];\n    bar_list[current_index]['color'] = bar_list[lowest_index]['color'];\n    bar_list[lowest_index]['len'] = temp['len'];\n    bar_list[lowest_index]['color'] = temp['color'];\n    bar_list[current_index] = lowest;\n    current_index++;\n  } //console.log(animations);\n  //for (var i = 0; i < bar_list.length; i++) {\n  //console.log(bar_list[i][\"len\"]);\n  //}\n\n\n  return [bar_list];\n}\n\nexport default selectionsort;","map":{"version":3,"sources":["/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/src/components/SelectionSort.js"],"names":["selectionsort","bar_list","animations","current_index","n","length","temp","lowest_index","i","lowest"],"mappings":"AAAA;AAEA,SAASA,aAAT,CAAuBC,QAAvB,EAAiC;AAC/B;AACA;AACA;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,aAAa,GAAG,CAApB;AACA,MAAIC,CAAC,GAAGH,QAAQ,CAACI,MAAjB;AACA,MAAIC,IAAJ,CAP+B,CASjC;;AACE,SAAOH,aAAa,GAAGC,CAAC,GAAC,CAAzB,EAA4B;AAC1B,QAAIG,YAAY,GAAG,CAAnB;;AAEE,SAAK,IAAIC,CAAC,GAAGL,aAAb,EAA4BK,CAAC,GAAGJ,CAAhC,EAAmCI,CAAC,EAApC,EAAwC;AAEtC,UAAIP,QAAQ,CAACO,CAAD,CAAR,CAAY,KAAZ,KAAsBP,QAAQ,CAACM,YAAD,CAAR,CAAuB,KAAvB,CAA1B,EAAwD;AACtDA,QAAAA,YAAY,GAAGN,QAAQ,CAACO,CAAD,CAAR,CAAY,IAAZ,CAAf;AACD;AACF;;AACDF,IAAAA,IAAI,GAAGL,QAAQ,CAACE,aAAD,CAAf;AACAF,IAAAA,QAAQ,CAACE,aAAD,CAAR,CAAwB,KAAxB,IAAiCF,QAAQ,CAACM,YAAD,CAAR,CAAuB,KAAvB,CAAjC;AACAN,IAAAA,QAAQ,CAACE,aAAD,CAAR,CAAwB,OAAxB,IAAmCF,QAAQ,CAACM,YAAD,CAAR,CAAuB,OAAvB,CAAnC;AACAN,IAAAA,QAAQ,CAACM,YAAD,CAAR,CAAuB,KAAvB,IAAgCD,IAAI,CAAC,KAAD,CAApC;AACAL,IAAAA,QAAQ,CAACM,YAAD,CAAR,CAAuB,OAAvB,IAAkCD,IAAI,CAAC,OAAD,CAAtC;AAEAL,IAAAA,QAAQ,CAACE,aAAD,CAAR,GAA0BM,MAA1B;AACAN,IAAAA,aAAa;AAEhB,GA5B8B,CA6B/B;AACA;AACE;AACF;;;AACA,SAAO,CAACF,QAAD,CAAP;AAGD;;AACD,eAAeD,aAAf","sourcesContent":["//import React from 'react';\n\nfunction selectionsort(bar_list) {\n  //animation list: nested arrays contain the two items being compared and\n  // a third item that if it exists is another array of two items that must\n  //be interchanged\n  var animations = [];\n  var current_index = 0;\n  var n = bar_list.length;\n  var temp;\n\n//loop through every item in array\n  while (current_index < n-1) {\n    var lowest_index = 0;\n\n      for (var i = current_index; i < n; i++) {\n\n        if (bar_list[i]['len'] <= bar_list[lowest_index]['len']){\n          lowest_index = bar_list[i]['id'];\n        }\n      }\n      temp = bar_list[current_index]\n      bar_list[current_index]['len'] = bar_list[lowest_index]['len'];\n      bar_list[current_index]['color'] = bar_list[lowest_index]['color'];\n      bar_list[lowest_index]['len'] = temp['len'];\n      bar_list[lowest_index]['color'] = temp['color'];\n\n      bar_list[current_index] = lowest;\n      current_index++;\n\n  }\n  //console.log(animations);\n  //for (var i = 0; i < bar_list.length; i++) {\n    //console.log(bar_list[i][\"len\"]);\n  //}\n  return [bar_list];\n\n\n}\nexport default selectionsort;\n"]},"metadata":{},"sourceType":"module"}