{"ast":null,"code":"var _jsxFileName = \"/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/src/components/App.js\";\nimport React from \"react\"; //import uuid from \"uuid\";\n\nimport Bars from \"./Bars\";\nimport selectionsort from \"./SelectionSort\";\nconst num_bars = 100;\nconst min_bar = 20;\nconst max_bar = 500;\nconst color1 = '#007bff';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.randomizebars = () => {\n      this.setState({\n        bar_list: GenerateBars(num_bars, min_bar, max_bar)\n      });\n    };\n\n    this.updatebars = updated_bars => {\n      var bar_docs = document.getElementsByClassName(\"bar\");\n      var counter = 0;\n      var k = 0;\n      var animations = updated_bars[1];\n      var started = false;\n      var temp;\n      var temporary_color = [0, 0];\n      var num_compairsons = 0;\n      var num_swaps = 0;\n      var speed = (100 - document.getElementById(\"speedrange\").value) * 250;\n      console.log(speed);\n\n      while (counter < animations.length) {\n        setTimeout(() => {\n          if (started) {\n            bar_docs[animations[k - 1][0]].style.backgroundColor = temporary_color[0];\n            bar_docs[animations[k - 1][1]].style.backgroundColor = temporary_color[1];\n          } else {\n            started = true;\n          }\n\n          if (animations[k][2] === 0) {\n            temporary_color[0] = bar_docs[animations[k][0]].style.backgroundColor;\n            temporary_color[1] = bar_docs[animations[k][1]].style.backgroundColor;\n            bar_docs[animations[k][0]].style.backgroundColor = 'red';\n            bar_docs[animations[k][1]].style.backgroundColor = 'red';\n            num_compairsons += 1;\n            document.getElementById('compairsons').innerText = num_compairsons;\n          } else if (animations[k][2] === 1) {\n            temp = bar_docs[animations[k][0]].style.height;\n            bar_docs[animations[k][0]].style.height = bar_docs[animations[k][1]].style.height;\n            bar_docs[animations[k][1]].style.height = temp;\n            temporary_color[0] = bar_docs[animations[k][1]].style.backgroundColor;\n            temporary_color[1] = bar_docs[animations[k][0]].style.backgroundColor;\n            bar_docs[animations[k][0]].style.backgroundColor = 'red';\n            bar_docs[animations[k][1]].style.backgroundColor = 'red';\n            num_swaps += 1;\n            document.getElementById('swaps').innerText = num_swaps;\n          } else {\n            temp = bar_docs[animations[k][0]].style.height;\n            bar_docs[animations[k][0]].style.height = bar_docs[animations[k][1]].style.height;\n            bar_docs[animations[k][1]].style.height = temp;\n            this.setState({\n              bar_list: updated_bars[0]\n            });\n          }\n\n          document.getElementById('total_ops').innerText = num_swaps + num_compairsons;\n          k++;\n        }, counter * speed);\n        counter++;\n      }\n\n      ;\n    };\n\n    this.state = {\n      bar_list: []\n    };\n  }\n\n  componentDidMount() {\n    this.randomizebars();\n  }\n\n  render() {\n    const {\n      bar_list\n    } = this.state;\n    return React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, React.createElement(\"div\", {\n      id: \"UI_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, React.createElement(\"div\", {\n      id: \"button_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.randomizebars(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, \"Randomize\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.updatebars(selectionsort(JSON.parse(JSON.stringify(this.state.bar_list)))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, \"Selection Sort\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \"Merge Sort\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"Quick Sort\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, \"Heap Sort\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \"Bubble Sort\")), React.createElement(\"div\", {\n      className: \"bars_and_data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, React.createElement(\"div\", {\n      className: \"data_viz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, React.createElement(\"div\", {\n      className: \"data_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, \"Number of compairsons:\", React.createElement(\"div\", {\n      id: \"compairsons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"0\"))), React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, React.createElement(\"div\", {\n      className: \"data_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, \"Number of swaps:\", React.createElement(\"div\", {\n      id: \"swaps\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"0\"))), React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, React.createElement(\"div\", {\n      className: \"data_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, \"Total Number of operations:\", React.createElement(\"div\", {\n      id: \"total_ops\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"0\"))), React.createElement(\"label\", {\n      htmlFor: \"numberange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"Number of Bars\"), React.createElement(\"input\", {\n      type: \"range\",\n      className: \"custom-range\",\n      id: \"numberange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), React.createElement(\"label\", {\n      htmlFor: \"speedrange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Sorting Speed\"), React.createElement(\"input\", {\n      type: \"range\",\n      className: \"custom-range\",\n      \"data-slider-min\": \"5\",\n      \"data-slider-max\": \"100\",\n      id: \"speedrange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    })), React.createElement(Bars, {\n      bar_list: bar_list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n} //Helper Functions\n\nfunction GenerateBars(len, min, max) {\n  var lst = [];\n\n  for (var i = 0; i < len; i++) {\n    var random = getRandomInt(min, max);\n    lst.push({\n      id: i,\n      len: random,\n      color: colorpernum(min, max, random)\n    });\n    colorpernum(min, max, random);\n  }\n\n  return lst;\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction colorpernum(min, max, number) {\n  var place = Math.floor(255 * (number - min) / (max - min));\n  var color = \"rgb(\" + 0 + \",\" + Math.floor(place * 123 / 255) + \",\" + place + \")\";\n  return color;\n}\n/*\nfunction sleep(milliseconds) {\n  const date = Date.now();\n  let currentDate = null;\n  do {\n    currentDate = Date.now();\n  } while (currentDate - date < milliseconds);\n}\n*/","map":{"version":3,"sources":["/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/src/components/App.js"],"names":["React","Bars","selectionsort","num_bars","min_bar","max_bar","color1","App","Component","constructor","props","randomizebars","setState","bar_list","GenerateBars","updatebars","updated_bars","bar_docs","document","getElementsByClassName","counter","k","animations","started","temp","temporary_color","num_compairsons","num_swaps","speed","getElementById","value","console","log","length","setTimeout","style","backgroundColor","innerText","height","state","componentDidMount","render","JSON","parse","stringify","len","min","max","lst","i","random","getRandomInt","push","id","color","colorpernum","Math","floor","number","place"],"mappings":"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","sourcesContent":["import React from \"react\";\n//import uuid from \"uuid\";\nimport Bars from \"./Bars\";\n\nimport selectionsort from \"./SelectionSort\"\n\nconst num_bars = 100;\nconst min_bar = 20;\nconst max_bar = 500;\nconst color1 = '#007bff';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      bar_list: []\n    };\n  }\n\n  componentDidMount() {\n    this.randomizebars();\n  }\n\n  randomizebars = () => {\n    this.setState({\n      bar_list: GenerateBars(num_bars, min_bar, max_bar)\n    });\n  }\n\n  render() {\n    const {bar_list} = this.state;\n\n    return (<div>\n      <div id=\"UI_container\">\n        <div id=\"button_container\">\n          <button className=\"btn btn-primary\" onClick={() => this.randomizebars()}>Randomize</button>\n          <button className=\"btn btn-primary\" onClick={() => this.updatebars(selectionsort(JSON.parse(JSON.stringify(this.state.bar_list))))}>Selection Sort</button>\n          <button className=\"btn btn-primary\">Merge Sort</button>\n          <button className=\"btn btn-primary\">Quick Sort</button>\n          <button className=\"btn btn-primary\">Heap Sort</button>\n          <button className=\"btn btn-primary\">Bubble Sort</button>\n        </div>\n        <div className=\"bars_and_data\">\n          <div className=\"data_viz\">\n            <div>\n              <div className=\"data_header\">Number of compairsons:\n                <div id=\"compairsons\">0</div>\n              </div>\n            </div>\n            <div>\n              <div className=\"data_header\">Number of swaps:\n                <div id=\"swaps\">0</div>\n              </div>\n            </div>\n            <div>\n              <div className=\"data_header\">Total Number of operations:\n                <div id=\"total_ops\">0</div>\n              </div>\n            </div>\n            <label htmlFor=\"numberange\">Number of Bars</label>\n            <input type=\"range\" className=\"custom-range\" id=\"numberange\"></input>\n\n            <label htmlFor=\"speedrange\">Sorting Speed</label>\n            <input type=\"range\" className=\"custom-range\" data-slider-min=\"5\" data-slider-max=\"100\" id=\"speedrange\"></input>\n          </div>\n          <Bars bar_list={bar_list}/>\n        </div>\n      </div>\n    </div>);\n  }\n  updatebars = (updated_bars) => {\n\n    var bar_docs = document.getElementsByClassName(\"bar\");\n    var counter = 0;\n    var k = 0;\n    var animations = updated_bars[1]\n\n    var started = false;\n\n    var temp;\n    var temporary_color = [0, 0]\n\n    var num_compairsons = 0;\n    var num_swaps = 0;\n\n    var speed = (100 - document.getElementById(\"speedrange\").value)*250;\n    console.log(speed);\n    while (counter < animations.length) {\n\n      setTimeout(() => {\n        if (started) {\n          bar_docs[animations[k - 1][0]].style.backgroundColor = temporary_color[0];\n          bar_docs[animations[k - 1][1]].style.backgroundColor = temporary_color[1];\n        } else {\n          started = true;\n        }\n\n        if (animations[k][2] === 0) {\n\n          temporary_color[0] = bar_docs[animations[k][0]].style.backgroundColor;\n          temporary_color[1] = bar_docs[animations[k][1]].style.backgroundColor;\n          bar_docs[animations[k][0]].style.backgroundColor = 'red';\n          bar_docs[animations[k][1]].style.backgroundColor = 'red';\n\n          num_compairsons += 1;\n          document.getElementById('compairsons').innerText = num_compairsons;\n\n        } else if (animations[k][2] === 1) {\n\n          temp = bar_docs[animations[k][0]].style.height;\n          bar_docs[animations[k][0]].style.height = bar_docs[animations[k][1]].style.height;\n          bar_docs[animations[k][1]].style.height = temp;\n          temporary_color[0] = bar_docs[animations[k][1]].style.backgroundColor;\n          temporary_color[1] = bar_docs[animations[k][0]].style.backgroundColor;\n          bar_docs[animations[k][0]].style.backgroundColor = 'red';\n          bar_docs[animations[k][1]].style.backgroundColor = 'red';\n\n          num_swaps += 1;\n          document.getElementById('swaps').innerText = num_swaps;\n\n        } else {\n\n          temp = bar_docs[animations[k][0]].style.height;\n          bar_docs[animations[k][0]].style.height = bar_docs[animations[k][1]].style.height;\n          bar_docs[animations[k][1]].style.height = temp;\n          this.setState({bar_list: updated_bars[0]});\n        }\n\n        document.getElementById('total_ops').innerText = num_swaps + num_compairsons;\n\n        k++;\n\n      }, counter * speed);\n      counter++;\n    };\n\n  }\n}\n\n//Helper Functions\n\nfunction GenerateBars(len, min, max) {\n  var lst = [];\n  for (var i = 0; i < len; i++) {\n    var random = getRandomInt(min, max);\n    lst.push({\n      id: i,\n      len: random,\n      color: colorpernum(min, max, random)\n    });\n    colorpernum(min, max, random);\n  }\n\n  return lst;\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction colorpernum(min, max, number) {\n  var place = Math.floor(255 * (number - min) / (max - min));\n  var color = \"rgb(\" + 0 + \",\" + Math.floor(place * 123 / 255) + \",\" + place + \")\";\n  return color;\n}\n\n/*\nfunction sleep(milliseconds) {\n  const date = Date.now();\n  let currentDate = null;\n  do {\n    currentDate = Date.now();\n  } while (currentDate - date < milliseconds);\n}\n*/\n"]},"metadata":{},"sourceType":"module"}