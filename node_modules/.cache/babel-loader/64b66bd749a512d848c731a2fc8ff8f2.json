{"ast":null,"code":"//import React from 'react';\nfunction selectionsort(bar_list) {\n  //animation list: nested arrays contain the two items being compared and\n  // a third item that if it exists is another array of two items that must\n  //be interchanged\n  //var animations = [];\n  var current_index = 0;\n  var n = bar_list.length;\n  var temp; //loop through every item in array\n\n  while (current_index < n - 1) {\n    var lowest_index = current_index;\n\n    for (var i = current_index + 1; i < n; i++) {\n      if (bar_list[i]['len'] <= bar_list[lowest_index]['len']) {\n        lowest_index = i;\n      }\n    }\n\n    temp = bar_list[current_index];\n    bar_list[current_index]['len'] = bar_list[lowest_index]['len'];\n    bar_list[current_index]['color'] = bar_list[lowest_index]['color'];\n    bar_list[lowest_index]['len'] = temp['len'];\n    bar_list[lowest_index]['color'] = temp['color'];\n    current_index++;\n  } //console.log(animations);\n\n  /*\n  for (i = 0; i < bar_list.length; i++) {\n    console.log(bar_list[i][\"len\"]);\n  }\n  return [bar_list];\n  */\n\n}\n\nexport default selectionsort;","map":{"version":3,"sources":["/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/src/components/SelectionSort.js"],"names":["selectionsort","bar_list","current_index","n","length","temp","lowest_index","i"],"mappings":"AAAA;AAEA,SAASA,aAAT,CAAuBC,QAAvB,EAAiC;AAC/B;AACA;AACA;AACA;AACA,MAAIC,aAAa,GAAG,CAApB;AACA,MAAIC,CAAC,GAAGF,QAAQ,CAACG,MAAjB;AACA,MAAIC,IAAJ,CAP+B,CASjC;;AACE,SAAOH,aAAa,GAAGC,CAAC,GAAC,CAAzB,EAA4B;AAC1B,QAAIG,YAAY,GAAGJ,aAAnB;;AAEE,SAAK,IAAIK,CAAC,GAAGL,aAAa,GAAC,CAA3B,EAA8BK,CAAC,GAAGJ,CAAlC,EAAqCI,CAAC,EAAtC,EAA0C;AAExC,UAAIN,QAAQ,CAACM,CAAD,CAAR,CAAY,KAAZ,KAAsBN,QAAQ,CAACK,YAAD,CAAR,CAAuB,KAAvB,CAA1B,EAAwD;AACtDA,QAAAA,YAAY,GAAGC,CAAf;AAED;AACF;;AAEDF,IAAAA,IAAI,GAAGJ,QAAQ,CAACC,aAAD,CAAf;AACAD,IAAAA,QAAQ,CAACC,aAAD,CAAR,CAAwB,KAAxB,IAAiCD,QAAQ,CAACK,YAAD,CAAR,CAAuB,KAAvB,CAAjC;AACAL,IAAAA,QAAQ,CAACC,aAAD,CAAR,CAAwB,OAAxB,IAAmCD,QAAQ,CAACK,YAAD,CAAR,CAAuB,OAAvB,CAAnC;AACAL,IAAAA,QAAQ,CAACK,YAAD,CAAR,CAAuB,KAAvB,IAAgCD,IAAI,CAAC,KAAD,CAApC;AACAJ,IAAAA,QAAQ,CAACK,YAAD,CAAR,CAAuB,OAAvB,IAAkCD,IAAI,CAAC,OAAD,CAAtC;AAEAH,IAAAA,aAAa;AAGhB,GA9B8B,CA+B/B;;AACA;;;;;;;AAOD;;AACD,eAAeF,aAAf","sourcesContent":["//import React from 'react';\n\nfunction selectionsort(bar_list) {\n  //animation list: nested arrays contain the two items being compared and\n  // a third item that if it exists is another array of two items that must\n  //be interchanged\n  //var animations = [];\n  var current_index = 0;\n  var n = bar_list.length;\n  var temp;\n\n//loop through every item in array\n  while (current_index < n-1) {\n    var lowest_index = current_index;\n\n      for (var i = current_index+1; i < n; i++) {\n\n        if (bar_list[i]['len'] <= bar_list[lowest_index]['len']){\n          lowest_index = i;\n\n        }\n      }\n\n      temp = bar_list[current_index]\n      bar_list[current_index]['len'] = bar_list[lowest_index]['len'];\n      bar_list[current_index]['color'] = bar_list[lowest_index]['color'];\n      bar_list[lowest_index]['len'] = temp['len'];\n      bar_list[lowest_index]['color'] = temp['color'];\n\n      current_index++;\n\n\n  }\n  //console.log(animations);\n  /*\n  for (i = 0; i < bar_list.length; i++) {\n    console.log(bar_list[i][\"len\"]);\n  }\n  return [bar_list];\n*/\n\n}\nexport default selectionsort;\n"]},"metadata":{},"sourceType":"module"}