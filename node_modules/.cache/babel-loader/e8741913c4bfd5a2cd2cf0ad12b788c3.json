{"ast":null,"code":"function bubblesort(bar_list) {\n  //animation list: nested arrays contain the two items being compared and\n  // a third item that if it exists is another array of two items that must\n  //be interchanged\n  var animations = [];\n  var going_to = bar_list.length;\n  var highest;\n\n  while (going_to > 1) {\n    for (var i = 1; i < going_to - 1; i++) {\n      console.log(bar_list[i - 1]);\n      console.log(bar_list[i]);\n\n      if (bar_list[i - 1]['len'] > bar_list[i]['len']) {\n        swap(bar_list, i - 1, i);\n      }\n    }\n\n    going_to--;\n  }\n\n  printbar(bar_list);\n}\n\nexport default bubblesort;\n\nfunction swap(bar_list, index1, index2) {\n  var temp = bar_list[index1];\n  bar_list[index1] = bar_list[index2];\n  bar_list[index2] = temp;\n  bar_list[index1]['id'] = index2;\n  bar_list[index2]['id'] = index1;\n}\n\nfunction printbar(bar_list) {\n  for (var i = 0; i < bar_list.length; i++) {\n    console.log(bar_list[i]);\n  }\n}","map":{"version":3,"sources":["/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/src/components/BubbleSort.js"],"names":["bubblesort","bar_list","animations","going_to","length","highest","i","console","log","swap","printbar","index1","index2","temp"],"mappings":"AAGA,SAASA,UAAT,CAAoBC,QAApB,EAA8B;AAC5B;AACA;AACA;AAEA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,QAAQ,GAAGF,QAAQ,CAACG,MAAxB;AACA,MAAIC,OAAJ;;AAIA,SAAOF,QAAQ,GAAG,CAAlB,EAAqB;AAEnB,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,GAAC,CAA7B,EAAgCG,CAAC,EAAjC,EAAqC;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACK,CAAC,GAAC,CAAH,CAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACK,CAAD,CAApB;;AAEA,UAAGL,QAAQ,CAACK,CAAC,GAAC,CAAH,CAAR,CAAc,KAAd,IAAuBL,QAAQ,CAACK,CAAD,CAAR,CAAY,KAAZ,CAA1B,EAA6C;AAC3CG,QAAAA,IAAI,CAACR,QAAD,EAAUK,CAAC,GAAC,CAAZ,EAAcA,CAAd,CAAJ;AACD;AACF;;AACDH,IAAAA,QAAQ;AACT;;AAEDO,EAAAA,QAAQ,CAACT,QAAD,CAAR;AACC;;AACH,eAAeD,UAAf;;AAEA,SAASS,IAAT,CAAcR,QAAd,EAAuBU,MAAvB,EAA8BC,MAA9B,EAAqC;AAEnC,MAAIC,IAAI,GAAGZ,QAAQ,CAACU,MAAD,CAAnB;AACAV,EAAAA,QAAQ,CAACU,MAAD,CAAR,GAAmBV,QAAQ,CAACW,MAAD,CAA3B;AACAX,EAAAA,QAAQ,CAACW,MAAD,CAAR,GAAmBC,IAAnB;AACAZ,EAAAA,QAAQ,CAACU,MAAD,CAAR,CAAiB,IAAjB,IAAyBC,MAAzB;AACAX,EAAAA,QAAQ,CAACW,MAAD,CAAR,CAAiB,IAAjB,IAAyBD,MAAzB;AAED;;AACD,SAASD,QAAT,CAAkBT,QAAlB,EAA2B;AACzB,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,QAAQ,CAACG,MAA7B,EAAqCE,CAAC,EAAtC,EAA0C;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACK,CAAD,CAApB;AACH;AACF","sourcesContent":["\n\n\nfunction bubblesort(bar_list) {\n  //animation list: nested arrays contain the two items being compared and\n  // a third item that if it exists is another array of two items that must\n  //be interchanged\n\n  var animations = [];\n  var going_to = bar_list.length;\n  var highest;\n\n\n\n  while (going_to > 1) {\n\n    for (var i = 1; i < going_to-1; i++) {\n      console.log(bar_list[i-1]);\n      console.log(bar_list[i]);\n\n      if(bar_list[i-1]['len'] > bar_list[i]['len']){\n        swap(bar_list,i-1,i);\n      }\n    }\n    going_to--;\n  }\n\n  printbar(bar_list);\n  }\nexport default bubblesort;\n\nfunction swap(bar_list,index1,index2){\n\n  var temp = bar_list[index1];\n  bar_list[index1] = bar_list[index2];\n  bar_list[index2] = temp;\n  bar_list[index1]['id'] = index2;\n  bar_list[index2]['id'] = index1;\n\n}\nfunction printbar(bar_list){\n  for (var i = 0; i < bar_list.length; i++) {\n      console.log(bar_list[i]);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}