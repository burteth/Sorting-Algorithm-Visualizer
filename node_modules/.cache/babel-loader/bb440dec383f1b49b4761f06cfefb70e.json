{"ast":null,"code":"import _classCallCheck from\"/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _possibleConstructorReturn from\"/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from\"react\";import Bars from\"./Bars\";import run_heapsort from\"./HeapSort\";import run_quicksort from\"./QuickSort\";import run_mergesort from\"./MergeSort\";import selectionsort from\"./SelectionSort\";import bubblesort from\"./BubbleSort\";var num_bars=200;var min_bar=10;var max_bar=500;var color1='#005af6';//(0, 123, 255)\nvar speed_max=100;var highlight_color=\"red\";var gradient=true;var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.clearCounters=function(){document.getElementById('compairsons').innerText=0;document.getElementById('swaps').innerText=0;document.getElementById('total_ops').innerText=0;};_this.randomizebars=function(){_this.stopCurrentSort();_this.setState({bar_list:GenerateBars(document.getElementById(\"numberange\").value,min_bar,max_bar,0)});_this.clearCounters();};_this.updateBarsFromState=function(){var bar_docs=document.getElementsByClassName(\"bar\");var current_bars=[];for(var j=0;j<bar_docs.length;j++){current_bars.push({color:bar_docs[j].style.backgroundColor,id:j,len:parseInt(bar_docs[j].style.height)});}_this.setState({bar_list:current_bars});};_this.stopCurrentSort=function(){//Clear all timeouts\nfor(var i=0;i<_this.timeouts.length;i++){clearTimeout(_this.timeouts[i]);}//Remove the bars that are currently red\nvar bar_docs=document.getElementsByClassName(\"bar\");for(var i=0;i<bar_docs.length;i++){if(bar_docs[i].style.backgroundColor===highlight_color){bar_docs[i].style.backgroundColor=colorpernum(min_bar,max_bar,parseInt(bar_docs[i].style.height));}}//Update the current state with the bars that are visable\n_this.updateBarsFromState();};_this.makeGradient=function(){var grad=document.getElementById(\"gradient_button\");var bar_docs=document.getElementsByClassName(\"bar\");var bars=set_bar_list(bar_docs);//Make one color\nif(grad.className.includes(\"active\")){grad.classList.remove(\"active\");for(var i=0;i<bars.length;i++){bars[i][\"color\"]=color1;}//make gradient\n}else{grad.classList.add(\"active\");for(var i=0;i<bars.length;i++){bars[i][\"color\"]=colorpernum(min_bar,max_bar,bars[i][\"len\"]);}}_this.setState({bar_list:bars});};_this.update_num_bars=function(){_this.stopCurrentSort();var number_of_bars=document.getElementById(\"numberange\").value;var bar_docs=document.getElementsByClassName(\"bar\");var bars=set_bar_list(bar_docs);var difference=number_of_bars-bars.length;if(difference>0){bars=bars.concat(GenerateBars(difference,min_bar,max_bar,bars.length));_this.setState({bar_list:bars});}else{bars=bars.splice(0,bars.length+difference);_this.setState({bar_list:bars});}};_this.updatebars=function(animations){//console.log(animations);\n_this.clearCounters();_this.stopCurrentSort();_this.timeouts=[];//this.currentanimations = [(JSON.parse(JSON.stringify(animations))),0];\nvar bar_docs=document.getElementsByClassName(\"bar\");var counter=0;var k=0;var temp;var temporary_color=[0,0];var num_compairsons=0;var num_swaps=0;//linear\nvar speed=Math.abs(-1*document.getElementById(\"speedrange\").value*speed_max/100.0+speed_max);while(counter<animations.length){_this.timeouts.push(setTimeout(function(){var first_index=animations[k][0];var second_index=animations[k][1];//console.log(\"Bar Docs:\", bar_docs);\n//console.log(first_index);\n//If the while loop has begun then change the color of the last two bars back into what they were\nif(k>0){bar_docs[animations[k-1][0]].style.backgroundColor=temporary_color[0];bar_docs[animations[k-1][1]].style.backgroundColor=temporary_color[1];}if(animations[k][2]===\"compare\"){//Compare the bars without swapping\ntemporary_color[0]=bar_docs[first_index].style.backgroundColor;temporary_color[1]=bar_docs[second_index].style.backgroundColor;bar_docs[first_index].style.backgroundColor=highlight_color;bar_docs[second_index].style.backgroundColor=highlight_color;num_compairsons+=1;document.getElementById('compairsons').innerText=num_compairsons;}else if(animations[k][2]===\"swap\"){//Swap the bars out\ntemp=bar_docs[first_index].style.height;bar_docs[first_index].style.height=bar_docs[second_index].style.height;bar_docs[second_index].style.height=temp;temporary_color[0]=bar_docs[second_index].style.backgroundColor;temporary_color[1]=bar_docs[first_index].style.backgroundColor;bar_docs[first_index].style.backgroundColor=highlight_color;bar_docs[second_index].style.backgroundColor=highlight_color;num_swaps+=1;document.getElementById('swaps').innerText=num_swaps;}else if(animations[k][2]===\"mergesort swap\"){//Only used my mergesort because the swapping is different\n//store height and color of bars that are being changed\ntemporary_color[0]=bar_docs[second_index].style.backgroundColor;temporary_color[1]=bar_docs[second_index-1].style.backgroundColor;temp=bar_docs[second_index].style.height;//shift up the bars one place to the right\nfor(var i=second_index;i>first_index;i--){bar_docs[i].style.height=bar_docs[i-1].style.height;bar_docs[i].style.backgroundColor=bar_docs[i-1].style.backgroundColor;}//update the height of the first index with the height of the second index bar\nbar_docs[first_index].style.height=temp;//highlight the bars being compared\nbar_docs[first_index].style.backgroundColor=highlight_color;bar_docs[second_index].style.backgroundColor=highlight_color;num_swaps+=1;document.getElementById('swaps').innerText=num_swaps;}if(k===animations.length-1){//This occurs if it is the final animation\nbar_docs[first_index].style.backgroundColor=temporary_color[0];bar_docs[second_index].style.backgroundColor=temporary_color[1];//update the bars in the current state\n_this.setState({bar_list:set_bar_list(bar_docs)});}document.getElementById('total_ops').innerText=num_swaps+num_compairsons;//this.currentanimations[1] += 1;\nk++;},counter*speed));counter++;};};_this.state={bar_list:GenerateBars(num_bars,min_bar,max_bar,0)};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.stopCurrentSort=this.stopCurrentSort.bind(this);this.updatebars=this.updatebars.bind(this);this.updateBarsFromState=this.updateBarsFromState.bind(this);this.clearCounters=this.clearCounters.bind(this);this.timeouts=[];this.currentanimations=[];}},{key:\"render\",//Update the speed of the current sort TOO SLOW FOR PRODUCTION\n/*\n  update_sort_speed = () => {\n    if (this.currentanimations !== []){\n\n      this.stopCurrentSort();\n      var animations =  this.currentanimations[0];\n      var current_num = this.currentanimations[1];\n      animations.splice(0, this.currentanimations[1]);\n      //console.log(animations);\n      //console.log(current_num);\n      this.updatebars(animations);\n\n    }\n\n\n\n  }\n  */value:function render(){var _this2=this;var bar_list=this.state.bar_list;return React.createElement(\"div\",null,React.createElement(\"div\",{id:\"UI_container\"},React.createElement(\"div\",{className:\"header\"},React.createElement(\"div\",{id:\"banner\"},React.createElement(\"h1\",null,\"Sorting Algorithm Visualizer\")),React.createElement(\"div\",{id:\"button_container\"},React.createElement(\"button\",{className:\"navbar_btn\",onClick:function onClick(){return _this2.updatebars(selectionsort(JSON.parse(JSON.stringify(_this2.state.bar_list))));}},\"Selection Sort\"),React.createElement(\"button\",{className:\"navbar_btn\",onClick:function onClick(){return _this2.updatebars(run_mergesort(JSON.parse(JSON.stringify(_this2.state.bar_list))));}},\"Merge Sort\"),React.createElement(\"button\",{className:\"navbar_btn\",onClick:function onClick(){return _this2.updatebars(run_quicksort(JSON.parse(JSON.stringify(_this2.state.bar_list))));}},\"Quick Sort\"),React.createElement(\"button\",{className:\"navbar_btn\",onClick:function onClick(){return _this2.updatebars(run_heapsort(JSON.parse(JSON.stringify(_this2.state.bar_list))));}},\"Heap Sort\"),React.createElement(\"button\",{className:\"navbar_btn\",onClick:function onClick(){return _this2.updatebars(bubblesort(JSON.parse(JSON.stringify(_this2.state.bar_list))));}},\"Bubble Sort\"))),React.createElement(\"div\",{className:\"bars_and_data\"},React.createElement(\"div\",{id:\"data_viz_outer\"},React.createElement(\"div\",{id:\"data_viz\"},React.createElement(\"div\",{id:\"counter_container\"},React.createElement(\"div\",null,React.createElement(\"div\",{className:\"data_header\"},\"Number of compairsons\",React.createElement(\"div\",{className:\"data_caption\",id:\"compairsons\"},\"0\"))),React.createElement(\"div\",null,React.createElement(\"div\",{className:\"data_header\"},\"Number of swaps\",React.createElement(\"div\",{className:\"data_caption\",id:\"swaps\"},\"0\"))),React.createElement(\"div\",null,React.createElement(\"div\",{className:\"data_header\"},\"Total number of operations\",React.createElement(\"div\",{className:\"data_caption\",id:\"total_ops\"},\"0\")))),React.createElement(\"div\",{id:\"range_container\"},React.createElement(\"div\",{className:\"data_header\"},\"Number of bars\"),React.createElement(\"input\",{type:\"range\",className:\"slider\",id:\"numberange\",min:\"20\",max:\"1000\",defaultValue:num_bars,onChange:this.update_num_bars}),React.createElement(\"div\",{className:\"data_header\"},\"Sorting Speed\"),React.createElement(\"input\",{type:\"range\",className:\"slider\",id:\"speedrange\",min:\"50\",max:\"100\",defaultValue:\"75\"})),React.createElement(\"div\",{className:\"control_button_container\"},React.createElement(\"button\",{className:\"control_button\",onClick:function onClick(){return _this2.randomizebars();}},\"Randomize Array\")),React.createElement(\"div\",{className:\"control_button_container\"},React.createElement(\"button\",{className:\"control_button active\",id:\"gradient_button\",onClick:function onClick(){return _this2.makeGradient();}},\"Gradient\"),React.createElement(\"button\",{className:\"control_button\",onClick:function onClick(){return _this2.stopCurrentSort();}},\"Stop\")))),React.createElement(\"div\",{id:\"bar_container_outer\"},React.createElement(Bars,{bar_list:bar_list})))));}}]);return App;}(React.Component);//Helper Functions\nexport{App as default};function GenerateBars(len,min,max,start){var lst=[];for(var i=0;i<len;i++){var random=getRandomInt(min,max);lst.push({id:i+start,len:random,color:colorpernum(min,max,random)});colorpernum(min,max,random);}return lst;}function getRandomInt(min,max){return Math.floor(Math.random()*(max-min)+min);}function colorpernum(min,max,number){var colors=[0,91,246];/* Main Color */for(var i=0;i<colors.length;i++){colors[i]=Math.floor(colors[i]*(number-min)/(max-min));}var color=\"rgb(\"+colors[0]+\",\"+colors[1]+\",\"+colors[2]+\")\";return color;}function sleep(milliseconds){var date=Date.now();var currentDate=null;do{currentDate=Date.now();}while(currentDate-date<milliseconds);}function set_bar_list(div_bars){var state_bars=[];for(var i=0;i<div_bars.length;i++){state_bars.push({\"color\":div_bars[i].style.backgroundColor,\"id\":i,\"len\":parseInt(div_bars[i].style.height.slice(0,-2))});}return state_bars;}","map":{"version":3,"sources":["/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/src/components/App.js"],"names":["React","Bars","run_heapsort","run_quicksort","run_mergesort","selectionsort","bubblesort","num_bars","min_bar","max_bar","color1","speed_max","highlight_color","gradient","App","props","clearCounters","document","getElementById","innerText","randomizebars","stopCurrentSort","setState","bar_list","GenerateBars","value","updateBarsFromState","bar_docs","getElementsByClassName","current_bars","j","length","push","color","style","backgroundColor","id","len","parseInt","height","i","timeouts","clearTimeout","colorpernum","makeGradient","grad","bars","set_bar_list","className","includes","classList","remove","add","update_num_bars","number_of_bars","difference","concat","splice","updatebars","animations","counter","k","temp","temporary_color","num_compairsons","num_swaps","speed","Math","abs","setTimeout","first_index","second_index","state","bind","currentanimations","JSON","parse","stringify","Component","min","max","start","lst","random","getRandomInt","floor","number","colors","sleep","milliseconds","date","Date","now","currentDate","div_bars","state_bars","slice"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Bars from \"./Bars\";\n\n\nimport run_heapsort from \"./HeapSort\"\nimport run_quicksort from \"./QuickSort\"\nimport run_mergesort from \"./MergeSort\"\nimport selectionsort from \"./SelectionSort\"\nimport bubblesort from \"./BubbleSort\"\n\nvar num_bars = 200;\nconst min_bar = 10;\nconst max_bar = 500;\nconst color1 = '#005af6'; //(0, 123, 255)\nconst speed_max = 100;\nconst highlight_color = \"red\";\nconst gradient = true;\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      bar_list: GenerateBars(num_bars, min_bar, max_bar, 0)\n    };\n\n  }\n\n  componentDidMount() {\n\n    this.stopCurrentSort = this.stopCurrentSort.bind(this);\n    this.updatebars = this.updatebars.bind(this);\n    this.updateBarsFromState = this.updateBarsFromState.bind(this);\n    this.clearCounters = this.clearCounters.bind(this);\n    this.timeouts = [];\n    this.currentanimations = [];\n\n  }\n\n  clearCounters = () => {\n    document.getElementById('compairsons').innerText = 0;\n    document.getElementById('swaps').innerText = 0;\n    document.getElementById('total_ops').innerText = 0;\n  }\n\n  randomizebars = () => {\n    this.stopCurrentSort();\n    this.setState({\n      bar_list: GenerateBars(document.getElementById(\"numberange\").value, min_bar, max_bar, 0)\n    });\n    this.clearCounters();\n\n  }\n\n  //Update the bars based on the current state of bar_list\n  updateBarsFromState = () => {\n\n    var bar_docs = document.getElementsByClassName(\"bar\");\n    var current_bars = []\n    for (var j = 0; j < bar_docs.length; j++) {\n      current_bars.push({\n        color: bar_docs[j].style.backgroundColor,\n        id: j,\n        len: parseInt(bar_docs[j].style.height)\n      })\n    }\n    this.setState({bar_list: current_bars});\n\n  }\n\n  //Interrupts the current sorting process\n  stopCurrentSort = () => {\n\n    //Clear all timeouts\n    for (var i = 0; i < this.timeouts.length; i++) {\n      clearTimeout(this.timeouts[i]);\n    }\n\n    //Remove the bars that are currently red\n    var bar_docs = document.getElementsByClassName(\"bar\");\n    for (var i = 0; i < bar_docs.length; i++) {\n      if (bar_docs[i].style.backgroundColor === highlight_color) {\n        bar_docs[i].style.backgroundColor = colorpernum(min_bar, max_bar, parseInt(bar_docs[i].style.height));\n      }\n    }\n\n    //Update the current state with the bars that are visable\n    this.updateBarsFromState();\n  }\n\n  //Change bars when gradient button is pressed\n  makeGradient = () => {\n\n    var grad = document.getElementById(\"gradient_button\");\n\n    var bar_docs = document.getElementsByClassName(\"bar\");\n    var bars = set_bar_list(bar_docs);\n\n    //Make one color\n    if (grad.className.includes(\"active\")){\n\n        grad.classList.remove(\"active\");\n        for (var i = 0; i < bars.length; i++) {\n          bars[i][\"color\"] = color1;\n        }\n\n    //make gradient\n    }else{\n\n        grad.classList.add(\"active\");\n        for (var i = 0; i < bars.length; i++) {\n          bars[i][\"color\"] = colorpernum(min_bar,max_bar,bars[i][\"len\"]);\n        }\n    }\n\n    this.setState({bar_list: bars});\n\n  }\n\n  //Update the number of bars from the slider\n  update_num_bars = () => {\n    this.stopCurrentSort();\n    var number_of_bars = document.getElementById(\"numberange\").value;\n\n    var bar_docs = document.getElementsByClassName(\"bar\");\n    var bars = set_bar_list(bar_docs);\n\n    var difference = number_of_bars - bars.length;\n\n    if (difference > 0){\n      bars = bars.concat(GenerateBars(difference,min_bar,max_bar, bars.length));\n      this.setState({bar_list: bars});\n\n    }else{\n      bars = bars.splice(0, bars.length + difference);\n      this.setState({bar_list: bars});\n\n    }\n\n\n  }\n\n  //Update the speed of the current sort TOO SLOW FOR PRODUCTION\n  /*\n  update_sort_speed = () => {\n    if (this.currentanimations !== []){\n\n      this.stopCurrentSort();\n      var animations =  this.currentanimations[0];\n      var current_num = this.currentanimations[1];\n      animations.splice(0, this.currentanimations[1]);\n      //console.log(animations);\n      //console.log(current_num);\n      this.updatebars(animations);\n\n    }\n\n\n\n  }\n  */\n\n  render() {\n    const {bar_list} = this.state;\n\n    return (<div>\n      <div id=\"UI_container\">\n        <div className=\"header\">\n          <div id=\"banner\">\n            <h1>Sorting Algorithm Visualizer</h1>\n          </div>\n          <div id=\"button_container\">\n            <button className=\"navbar_btn\" onClick={() => this.updatebars(selectionsort(JSON.parse(JSON.stringify(this.state.bar_list))))}>Selection Sort</button>\n            <button className=\"navbar_btn\" onClick={() => this.updatebars(run_mergesort((JSON.parse(JSON.stringify(this.state.bar_list)))))}>Merge Sort</button>\n            <button className=\"navbar_btn\" onClick={() => this.updatebars(run_quicksort((JSON.parse(JSON.stringify(this.state.bar_list)))))}>Quick Sort</button>\n            <button className=\"navbar_btn\" onClick={() => this.updatebars(run_heapsort((JSON.parse(JSON.stringify(this.state.bar_list)))))}>Heap Sort</button>\n            <button className=\"navbar_btn\" onClick={() => this.updatebars(bubblesort(JSON.parse(JSON.stringify(this.state.bar_list))))}>Bubble Sort</button>\n          </div>\n        </div>\n        <div className=\"bars_and_data\">\n\n          <div id=\"data_viz_outer\">\n            <div id=\"data_viz\">\n\n              <div id=\"counter_container\">\n                <div>\n                  <div className=\"data_header\">Number of compairsons\n                    <div className=\"data_caption\" id=\"compairsons\">0</div>\n                  </div>\n                </div>\n                <div>\n                  <div className=\"data_header\">Number of swaps\n                    <div className=\"data_caption\" id=\"swaps\">0</div>\n                  </div>\n                </div>\n                <div>\n                  <div className=\"data_header\">Total number of operations\n                    <div className=\"data_caption\" id=\"total_ops\">0</div>\n                  </div>\n                </div>\n              </div>\n\n              <div id=\"range_container\">\n\n                <div className=\"data_header\">Number of bars</div>\n                <input type=\"range\" className=\"slider\" id=\"numberange\" min=\"20\" max=\"1000\" defaultValue={num_bars} onChange={this.update_num_bars}></input>\n\n                <div className=\"data_header\">Sorting Speed</div>\n                <input type=\"range\" className=\"slider\" id=\"speedrange\" min=\"50\" max=\"100\" defaultValue='75'></input>\n\n              </div>\n              <div className=\"control_button_container\">\n\n                <button className=\"control_button\" onClick={() => this.randomizebars()}>Randomize Array</button>\n\n              </div>\n\n              <div className=\"control_button_container\">\n\n                <button className=\"control_button active\" id=\"gradient_button\" onClick={() => this.makeGradient()}>Gradient</button>\n                <button className=\"control_button\" onClick={() => this.stopCurrentSort()}>Stop</button>\n\n              </div>\n\n            </div>\n          </div>\n          <div id=\"bar_container_outer\">\n            <Bars bar_list={bar_list}/>\n          </div>\n        </div>\n      </div>\n    </div>);\n  }\n\n  updatebars = (animations) => {\n    //console.log(animations);\n\n    this.clearCounters();\n    this.stopCurrentSort();\n\n    this.timeouts = [];\n    //this.currentanimations = [(JSON.parse(JSON.stringify(animations))),0];\n\n    var bar_docs = document.getElementsByClassName(\"bar\");\n    var counter = 0;\n    var k = 0;\n\n    var temp;\n    var temporary_color = [0, 0]\n\n    var num_compairsons = 0;\n    var num_swaps = 0;\n\n    //linear\n    var speed = Math.abs((((-1 * (document.getElementById(\"speedrange\").value)) * speed_max / 100.0) + speed_max));\n\n\n\n    while (counter < animations.length) {\n\n\n\n      this.timeouts.push(setTimeout(() => {\n        var first_index = animations[k][0];\n        var second_index = animations[k][1];\n        //console.log(\"Bar Docs:\", bar_docs);\n        //console.log(first_index);\n\n\n        //If the while loop has begun then change the color of the last two bars back into what they were\n        if (k > 0) {\n\n          bar_docs[animations[k - 1][0]].style.backgroundColor = temporary_color[0];\n          bar_docs[animations[k - 1][1]].style.backgroundColor = temporary_color[1];\n\n        }\n\n        if (animations[k][2] === \"compare\") { //Compare the bars without swapping\n\n          temporary_color[0] = bar_docs[first_index].style.backgroundColor;\n          temporary_color[1] = bar_docs[second_index].style.backgroundColor;\n          bar_docs[first_index].style.backgroundColor = highlight_color;\n          bar_docs[second_index].style.backgroundColor = highlight_color;\n\n          num_compairsons += 1;\n          document.getElementById('compairsons').innerText = num_compairsons;\n\n        } else if (animations[k][2] === \"swap\") { //Swap the bars out\n\n          temp = bar_docs[first_index].style.height;\n          bar_docs[first_index].style.height = bar_docs[second_index].style.height;\n          bar_docs[second_index].style.height = temp;\n          temporary_color[0] = bar_docs[second_index].style.backgroundColor;\n          temporary_color[1] = bar_docs[first_index].style.backgroundColor;\n          bar_docs[first_index].style.backgroundColor = highlight_color;\n          bar_docs[second_index].style.backgroundColor = highlight_color;\n\n          num_swaps += 1;\n          document.getElementById('swaps').innerText = num_swaps;\n\n        } else if (animations[k][2] === \"mergesort swap\"){\n          //Only used my mergesort because the swapping is different\n\n          //store height and color of bars that are being changed\n          temporary_color[0] = bar_docs[second_index].style.backgroundColor;\n          temporary_color[1] = bar_docs[second_index - 1].style.backgroundColor;\n          temp = bar_docs[second_index].style.height;\n\n          //shift up the bars one place to the right\n            for (var i = second_index; i > first_index; i--) {\n                bar_docs[i].style.height = bar_docs[i - 1].style.height;\n                bar_docs[i].style.backgroundColor = bar_docs[i - 1].style.backgroundColor;\n              }\n          //update the height of the first index with the height of the second index bar\n          bar_docs[first_index].style.height = temp;\n\n          //highlight the bars being compared\n          bar_docs[first_index].style.backgroundColor = highlight_color;\n          bar_docs[second_index].style.backgroundColor = highlight_color;\n\n\n          num_swaps += 1;\n          document.getElementById('swaps').innerText = num_swaps;\n\n\n        }\n\n        if (k === animations.length - 1) {\n          //This occurs if it is the final animation\n          bar_docs[first_index].style.backgroundColor = temporary_color[0];\n          bar_docs[second_index].style.backgroundColor = temporary_color[1];\n\n          //update the bars in the current state\n          this.setState({bar_list: set_bar_list(bar_docs)});\n\n        }\n\n        document.getElementById('total_ops').innerText = num_swaps + num_compairsons;\n\n        //this.currentanimations[1] += 1;\n\n        k++;\n\n\n      }, counter * speed));\n      counter++;\n    };\n\n  }\n\n}\n\n//Helper Functions\n\nfunction GenerateBars(len, min, max, start) {\n  var lst = [];\n  for (var i = 0; i < len; i++) {\n    var random = getRandomInt(min, max);\n    lst.push({\n      id: i + start,\n      len: random,\n      color: colorpernum(min, max, random)\n    });\n    colorpernum(min, max, random);\n  }\n\n  return lst;\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction colorpernum(min, max, number) {\n\n  var colors = [0, 91, 246] /* Main Color */\n\n    for (var i = 0; i < colors.length; i++) {\n        colors[i] = Math.floor(colors[i] * (number - min) / (max - min));\n    }\n  var color = \"rgb(\" + colors[0] + \",\" + colors[1] + \",\" + colors[2] + \")\";\n\n\n  return color;\n}\n\nfunction sleep(milliseconds) {\n  const date = Date.now();\n  let currentDate = null;\n  do {\n    currentDate = Date.now();\n  } while (currentDate - date < milliseconds);\n}\n\n\nfunction set_bar_list(div_bars){\n    var state_bars = [];\n\n    for (var i = 0; i < div_bars.length; i++) {\n      state_bars.push({\"color\":div_bars[i].style.backgroundColor,\"id\":i,\"len\":parseInt((div_bars[i].style.height).slice(0,-2))});\n    }\n    return state_bars\n}\n"]},"metadata":{},"sourceType":"module"}