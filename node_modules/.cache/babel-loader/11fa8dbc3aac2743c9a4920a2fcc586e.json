{"ast":null,"code":"function bubblesort(bar_list){//animation list: nested arrays contain the two items being compared and\n// a third item that if it exists is another array of two items that must\n//be interchanged\nvar animations=[];var going_to=bar_list.length-1;while(going_to>1){for(var i=0;i<going_to;i++){if(bar_list[i]['len']>bar_list[i+1]['len']){animations.push([i,i+1,\"swap\"]);swap(bar_list,i,i+1);}else{animations.push([i,i+1,\"compare\"]);}}going_to--;}return animations;}export default bubblesort;function swap(bar_list,index1,index2){var temp=bar_list[index1];bar_list[index1]=bar_list[index2];bar_list[index2]=temp;bar_list[index1]['id']=index1;bar_list[index2]['id']=index2;}","map":{"version":3,"sources":["/Users/ethanburt/Desktop/Coding/Projects/Sorting_Algorithm_Visualizer/src/components/BubbleSort.js"],"names":["bubblesort","bar_list","animations","going_to","length","i","push","swap","index1","index2","temp"],"mappings":"AAGA,QAASA,CAAAA,UAAT,CAAoBC,QAApB,CAA8B,CAC5B;AACA;AACA;AAEA,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAIC,CAAAA,QAAQ,CAAGF,QAAQ,CAACG,MAAT,CAAgB,CAA/B,CAEA,MAAOD,QAAQ,CAAG,CAAlB,CAAqB,CAEnB,IAAK,GAAIE,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,QAApB,CAA8BE,CAAC,EAA/B,CAAmC,CACjC,GAAGJ,QAAQ,CAACI,CAAD,CAAR,CAAY,KAAZ,EAAqBJ,QAAQ,CAACI,CAAC,CAAC,CAAH,CAAR,CAAc,KAAd,CAAxB,CAA6C,CAE3CH,UAAU,CAACI,IAAX,CAAgB,CAACD,CAAD,CAAGA,CAAC,CAAC,CAAL,CAAO,MAAP,CAAhB,EACAE,IAAI,CAACN,QAAD,CAAUI,CAAV,CAAYA,CAAC,CAAC,CAAd,CAAJ,CACD,CAJD,IAIK,CACHH,UAAU,CAACI,IAAX,CAAgB,CAACD,CAAD,CAAGA,CAAC,CAAC,CAAL,CAAO,SAAP,CAAhB,EACD,CACF,CACDF,QAAQ,GACT,CAED,MAAOD,CAAAA,UAAP,CAGC,CACH,cAAeF,CAAAA,UAAf,CAGA,QAASO,CAAAA,IAAT,CAAcN,QAAd,CAAuBO,MAAvB,CAA8BC,MAA9B,CAAqC,CAEnC,GAAIC,CAAAA,IAAI,CAAGT,QAAQ,CAACO,MAAD,CAAnB,CACAP,QAAQ,CAACO,MAAD,CAAR,CAAmBP,QAAQ,CAACQ,MAAD,CAA3B,CACAR,QAAQ,CAACQ,MAAD,CAAR,CAAmBC,IAAnB,CACAT,QAAQ,CAACO,MAAD,CAAR,CAAiB,IAAjB,EAAyBA,MAAzB,CACAP,QAAQ,CAACQ,MAAD,CAAR,CAAiB,IAAjB,EAAyBA,MAAzB,CAED","sourcesContent":["\n\n\nfunction bubblesort(bar_list) {\n  //animation list: nested arrays contain the two items being compared and\n  // a third item that if it exists is another array of two items that must\n  //be interchanged\n\n  var animations = [];\n  var going_to = bar_list.length-1;\n\n  while (going_to > 1) {\n\n    for (var i = 0; i < going_to; i++) {\n      if(bar_list[i]['len'] > bar_list[i+1]['len']){\n\n        animations.push([i,i+1,\"swap\"]);\n        swap(bar_list,i,i+1);\n      }else{\n        animations.push([i,i+1,\"compare\"]);\n      }\n    }\n    going_to--;\n  }\n\n  return animations;\n\n\n  }\nexport default bubblesort;\n\n\nfunction swap(bar_list,index1,index2){\n\n  var temp = bar_list[index1];\n  bar_list[index1] = bar_list[index2];\n  bar_list[index2] = temp;\n  bar_list[index1]['id'] = index1;\n  bar_list[index2]['id'] = index2;\n\n}\n"]},"metadata":{},"sourceType":"module"}